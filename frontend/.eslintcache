[{"/Users/PenguinCho/Desktop/ito-online/frontend/src/App.tsx":"1","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomPart.tsx":"2","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateRoomPart.tsx":"3","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/Header.tsx":"4","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayedResult.tsx":"5","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/BackButton.tsx":"6","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInput.ts":"7","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomItem.tsx":"8","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/GameoverResult.tsx":"9","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/fetchDataByAPI.ts":"10","/Users/PenguinCho/Desktop/ito-online/frontend/src/config.ts":"11","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/makeGamePlayingPayload.ts":"12","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/WaitingRoomPart.tsx":"13","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerList.tsx":"14","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyStandBy.tsx":"15","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/useWaitingRoomPart.ts":"16","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/itoSocket.ts":"17","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useEnterSocketRoom.ts":"18","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/functions/usePlayingPart.ts":"19","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/FailSuccessResult.tsx":"20","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ContinuedResult.tsx":"21","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useToggle.ts":"22","/Users/PenguinCho/Desktop/ito-online/frontend/src/index.tsx":"23","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/context.ts":"24","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/RoomPartContainer.tsx":"25","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/WaitingRoomPartContainer.tsx":"26","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayingPart.tsx":"27","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ThemeQuestion.tsx":"28","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeList.tsx":"29","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyButton.tsx":"30","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomList.tsx":"31","/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRoom.ts":"32","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/API.ts":"33","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/ROUTES.ts":"34","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateRoomPartContainer.tsx":"35","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/HeaderContainer.tsx":"36","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/PlayingPartContainer.tsx":"37","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/functions/useRoomPart.ts":"38","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useFetch.ts":"39","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/setObjPropertyByKeysAndValue.ts":"40","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/regExps.ts":"41","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayArea.tsx":"42","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeItem.tsx":"43","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/CTAButton.tsx":"44","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateRoomPart.ts":"45","/Users/PenguinCho/Desktop/ito-online/frontend/src/reducers/index.ts":"46","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerItem.tsx":"47","/Users/PenguinCho/Desktop/ito-online/frontend/src/actions/index.ts":"48","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PassedRoundsInfo.tsx":"49","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/roomResolvers.ts":"50","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/checkIsRoomsPage.ts":"51"},{"size":1710,"mtime":1612764714113,"results":"52","hashOfConfig":"53"},{"size":651,"mtime":1612146922974,"results":"54","hashOfConfig":"53"},{"size":760,"mtime":1612237269235,"results":"55","hashOfConfig":"53"},{"size":974,"mtime":1612765123254,"results":"56","hashOfConfig":"53"},{"size":1838,"mtime":1612719907619,"results":"57","hashOfConfig":"53"},{"size":804,"mtime":1612764586594,"results":"58","hashOfConfig":"53"},{"size":752,"mtime":1612146922977,"results":"59","hashOfConfig":"53"},{"size":1215,"mtime":1612320718472,"results":"60","hashOfConfig":"53"},{"size":537,"mtime":1612489376890,"results":"61","hashOfConfig":"53"},{"size":947,"mtime":1612320718477,"results":"62","hashOfConfig":"53"},{"size":1232,"mtime":1612692706783,"results":"63","hashOfConfig":"53"},{"size":1581,"mtime":1612401881292,"results":"64","hashOfConfig":"53"},{"size":645,"mtime":1612161310720,"results":"65","hashOfConfig":"53"},{"size":397,"mtime":1612160971799,"results":"66","hashOfConfig":"53"},{"size":463,"mtime":1612158902578,"results":"67","hashOfConfig":"53"},{"size":4048,"mtime":1612511331630,"results":"68","hashOfConfig":"53"},{"size":4557,"mtime":1612692801150,"results":"69","hashOfConfig":"53"},{"size":706,"mtime":1612506924581,"results":"70","hashOfConfig":"53"},{"size":5808,"mtime":1612719003760,"results":"71","hashOfConfig":"53"},{"size":1198,"mtime":1612719952039,"results":"72","hashOfConfig":"53"},{"size":851,"mtime":1612711776130,"results":"73","hashOfConfig":"53"},{"size":563,"mtime":1612516790781,"results":"74","hashOfConfig":"53"},{"size":728,"mtime":1612320718476,"results":"75","hashOfConfig":"53"},{"size":1044,"mtime":1612401881293,"results":"76","hashOfConfig":"53"},{"size":506,"mtime":1612156422768,"results":"77","hashOfConfig":"53"},{"size":1615,"mtime":1612337438708,"results":"78","hashOfConfig":"53"},{"size":545,"mtime":1612171701920,"results":"79","hashOfConfig":"53"},{"size":682,"mtime":1612163721934,"results":"80","hashOfConfig":"53"},{"size":763,"mtime":1612401881291,"results":"81","hashOfConfig":"53"},{"size":359,"mtime":1612236838473,"results":"82","hashOfConfig":"53"},{"size":568,"mtime":1612146922974,"results":"83","hashOfConfig":"53"},{"size":564,"mtime":1612232566938,"results":"84","hashOfConfig":"53"},{"size":269,"mtime":1612146922976,"results":"85","hashOfConfig":"53"},{"size":277,"mtime":1612325606515,"results":"86","hashOfConfig":"53"},{"size":504,"mtime":1612146922973,"results":"87","hashOfConfig":"53"},{"size":310,"mtime":1612764984766,"results":"88","hashOfConfig":"53"},{"size":577,"mtime":1612330751779,"results":"89","hashOfConfig":"53"},{"size":1071,"mtime":1612320718474,"results":"90","hashOfConfig":"53"},{"size":1398,"mtime":1612320718477,"results":"91","hashOfConfig":"53"},{"size":599,"mtime":1612489376895,"results":"92","hashOfConfig":"53"},{"size":50,"mtime":1612232566945,"results":"93","hashOfConfig":"53"},{"size":1013,"mtime":1612719273207,"results":"94","hashOfConfig":"53"},{"size":487,"mtime":1612162539623,"results":"95","hashOfConfig":"53"},{"size":592,"mtime":1612401881290,"results":"96","hashOfConfig":"53"},{"size":1351,"mtime":1612320718471,"results":"97","hashOfConfig":"53"},{"size":1101,"mtime":1612489376896,"results":"98","hashOfConfig":"53"},{"size":589,"mtime":1612160037631,"results":"99","hashOfConfig":"53"},{"size":1532,"mtime":1612489376888,"results":"100","hashOfConfig":"53"},{"size":406,"mtime":1612489376891,"results":"101","hashOfConfig":"53"},{"size":1734,"mtime":1612320718473,"results":"102","hashOfConfig":"53"},{"size":230,"mtime":1612765145930,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sell2s",{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"109"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"146"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"109"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"109"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"161"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"161"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"161"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"146"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"109"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"161"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"109"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"109"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/PenguinCho/Desktop/ito-online/frontend/src/App.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomPart.tsx",["232"],"import React from 'react';\nimport { Box, Button, CircularProgress, Divider } from '@material-ui/core';\nimport RoomList from './RoomList';\nimport { RoomPartProps } from './types';\n\nconst RoomPart = (props: RoomPartProps) => {\n  return (\n    <Box\n      textAlign={'center'}\n    >\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <RoomList {...props} />\n      )}\n      {/* <Box paddingY={1}>\n        <Divider />\n      </Box> */}\n      <Button \n        color={'primary'} \n        variant={'outlined'}\n        onClick={props.onCreateRoom}\n      >\n        {'Create Room'}\n      </Button>\n    </Box>\n  );\n};\n\nexport default RoomPart;",["233","234"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateRoomPart.tsx",["235"],"import React from 'react';\nimport { Box, Button, Divider, TextField } from '@material-ui/core';\nimport { CreateRoomPartProps } from './types';\nimport CTAButton from 'components/ito/Common/components/CTAButton';\n\nconst CreateRoomPart = (props: CreateRoomPartProps) => {\n  return (\n    <Box\n      textAlign={'center'}\n    >\n      <TextField\n        value={props.value}\n        variant={'outlined'}\n        placeholder={'Input room name...'}\n        onChange={props.onChange}\n      />\n      <Box paddingY={1}>\n        <Divider />\n      </Box>\n      <CTAButton\n        disabled={props.loading}\n        onClick={props.onCreateRoom}\n      >\n        {props.loading ? 'Creating...' : 'Create Room'}\n      </CTAButton>\n    </Box>\n  );\n};\n\nexport default CreateRoomPart;",["236","237"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/Header.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayedResult.tsx",["238","239","240","241"],"import React from 'react';\nimport { Box, makeStyles, Modal, Paper, Typography } from '@material-ui/core';\nimport { PlayedResultPayload, PlayedResultProps } from './types';\nimport FailSuccessResult from './FailSuccessResult';\nimport ContinuedResult from './ContinuedResult';\nimport GameoverResult from './GameoverResult';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  content: {\n    backgroundColor: '#fff',\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    \n  }\n}));\n\nexport const getModalResult = (props: PlayedResultProps) => {\n  const { resultPayload } = props;\n\n  if(resultPayload) {\n    switch (resultPayload.resultType) {\n      case 'CONTINUED':\n      case 'CONTINUED_FAILED':\n        return (\n          <ContinuedResult \n            {...props}\n            isContinuedFailed={resultPayload.resultType === 'CONTINUED_FAILED'}\n            passedRounds={resultPayload.passedRounds}\n          />\n        );\n      case 'GAME_OVER':\n        return (\n          <GameoverResult \n            {...props} \n            passedRounds={resultPayload.passedRounds}\n          />\n        );\n      default:\n        return (\n          <FailSuccessResult \n            {...resultPayload}\n            onConfirmResult={props.onCloseResult}\n          />\n        );\n    }\n  }\n};\n\nconst PlayedResult = (props: PlayedResultProps) => {\n  const {\n    isResultOpen,\n    resultPayload,\n    onCloseResult,\n  } = props;\n  const classes = useStyles();\n\n  if(!resultPayload) {\n    return null;\n  }\n\n  return (\n    <>\n      <Modal \n        className={classes.modal}\n        open={isResultOpen}\n      >\n        <Paper className={classes.content}>\n          {getModalResult(props)}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport default PlayedResult;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/BackButton.tsx",["242"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInput.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomItem.tsx",[],["243","244"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/GameoverResult.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/fetchDataByAPI.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/config.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/makeGamePlayingPayload.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/WaitingRoomPart.tsx",[],["245","246"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerList.tsx",["247"],"import React from 'react';\nimport { Box, List } from '@material-ui/core';\nimport { PlayerListProps } from './types';\nimport PlayerItem from './PlayerItem';\n\nconst PlayerList = (props: PlayerListProps) => {\n  return (\n    <List>\n      {props.playerListData.map((p, i) => (\n        <PlayerItem\n          key={i}\n          {...p}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default PlayerList;  ",["248","249"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyStandBy.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/useWaitingRoomPart.ts",["250","251","252","253"],"import { setGamePlayingStatus, SetGamePlayingStatusPayload } from \"actions\";\nimport useQueryRoom from \"api/custom-hooks/useQueryRoom\";\nimport { socket } from \"App\";\nimport { GamePlayingStatusFromSocketPayload, SingleRoom, SingleUser } from \"common-types\";\nimport { PlayerItemProps } from \"components/ito/RoomPart/components/WaitingRoom/types\";\nimport { SOCKET_EVENT, USER_ACTION } from \"config\";\nimport ContextStore, { initItoState } from \"constants/context\";\nimport ItoSocket, { AddPlayerPayload, PlayerUpdateReadyPayload, RemovePlayerPayload, UpdateAllPlayersPayload } from \"constants/itoSocket\";\nimport ROUTES, { RouterParams } from \"constants/ROUTES\";\nimport useEnterSocketRoom from \"lib/custom-hooks/useEnterSocketRoom\";\nimport useToggle from \"lib/custom-hooks/useToggle\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport makeGamePlayingPayload from \"./makeGamePlayingPayload\";\nimport roomResolvers from \"./roomResolvers\";\n\nexport interface UseWaitingRoomPartOptions {\n  setGamePlayingStatusToCtx: typeof setGamePlayingStatus\n}\n\nconst useWaitingRoomPart = ({\n  setGamePlayingStatusToCtx,\n}: UseWaitingRoomPartOptions) => {\n  const {\n    state: {\n      user,\n      gamePlayingStatus,\n    }\n  } = useContext(ContextStore);\n\n  const {\n    roomId,\n  } = useParams<RouterParams>();\n  const history = useHistory();\n  useEnterSocketRoom({\n    user, roomId,\n  });\n\n  const {\n    toggle: isReady,\n    handleToggle,\n  } = useToggle(false);\n  const queried = useQueryRoom({ roomId, });\n  const [room, setRoom] = useState<SingleRoom>();\n  const [users, setUsers] = useState<SingleUser[]>([]);\n\n  const handleSetReady = useCallback(() => {\n    handleToggle();\n  }, []);\n\n  const handleUpdateRoomPlayerReady = useCallback((payload: PlayerUpdateReadyPayload) => {\n    setRoom(_room => (\n      roomResolvers.udpateRoomUser({ room: _room, }, payload)\n    ));\n  }, []);\n  const handleUpdateAllPlayers = useCallback((payload: UpdateAllPlayersPayload) => {\n    setUsers(payload.users);\n  }, []);\n  const handleAddPalyerToRoom = useCallback((payload: AddPlayerPayload) => {\n    setRoom(_room => (\n      roomResolvers.addPlayer({ room: _room, }, payload)\n    ));\n  }, []);\n  const handleRemovePlayerFromRoom = useCallback((payload: RemovePlayerPayload) => {\n    setUsers(users => (\n      roomResolvers.removePlayer({ users, }, payload)\n    ));\n  }, []);\n  const handleGameStart = useCallback((payload: GamePlayingStatusFromSocketPayload) => {\n    console.log(payload);\n    // 轉為user自己的\n    const ctxPayload = makeGamePlayingPayload({\n      user,\n      roomId,\n      payloadFromSocket: payload,\n    });\n\n    setGamePlayingStatusToCtx(ctxPayload as any);\n    history.push(ROUTES.playing);\n  }, [history, roomId, setGamePlayingStatusToCtx, user]);\n\n  useEffect(() => {\n    // 取得房間最新狀態\n    const listener = ItoSocket.onListenGameStatus({\n      onUpdateAllPlayers: handleUpdateAllPlayers,\n      onUpdatePlayerReady: handleUpdateRoomPlayerReady,\n      onAddPlayer: handleAddPalyerToRoom,\n      onRemovePlayer: handleRemovePlayerFromRoom,\n      onGameStart: handleGameStart,\n    });\n    return () => {\n      listener();\n    };\n  }, [handleAddPalyerToRoom, handleGameStart, handleRemovePlayerFromRoom, handleUpdateAllPlayers, handleUpdateRoomPlayerReady]);\n\n  useEffect(() => {\n    ItoSocket.sendUserReady({\n      userId: user.id,\n      isReady,\n    });\n  }, [isReady, user.id]);\n\n  useEffect(() => {\n    if(queried.room) {\n      setRoom(queried.room);\n      socket.emit(SOCKET_EVENT.USER_ACTION, {\n        userActionType: USER_ACTION.GET_ALL_PLAYERS_READY\n      });\n    }\n  }, [queried.room]);\n\n  const playerListData: PlayerItemProps[] = useMemo(() => (\n    users.map(p => ({\n      ...p,\n      isReady: !!(p.isReady),\n      isMe: p.id === user.id,\n      playerName: p.name || p.id,\n    }))\n  ), [users, user.id]);\n\n  return ({\n    isReady,\n    loading: false,\n    room,\n    playerListData,\n    handleSetReady,\n  });\n};\n\nexport default useWaitingRoomPart;",["254","255"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/itoSocket.ts",["256","257","258"],"\nimport { Callback, GamePlayingStatus, GameStatus, GameStatusKeys, ComparedPlayedResult, SingleUser, GamePlayingStatusFromSocketPayload, PlayedResultType } from 'common-types';\nimport { GAME_STATUS, SOCKET_EVENT, USER_ACTION, GameStatusTypes } from 'config';\nimport { io } from 'socket.io-client';\nimport { API_URI } from './API';\nimport { ItoState } from './context';\n\nexport const socket = io(API_URI);\n\nexport interface UserReadyPayload {\n  userId: string\n  isReady: boolean\n}\nexport interface UserJoinRoomPayload {\n  roomId: string\n  user: SingleUser\n}\nexport interface UserLeaveRoomPayload {\n  roomId: string\n  userId: string\n}\nexport interface UserPlayCardPayload {\n  userId: string\n  cardNumber: GamePlayingStatus['myCardNow']\n}\n\nexport interface BasicGameStatusPayload {\n  gameStatus: GameStatusKeys\n}\nexport interface PlayerUpdateReadyPayload {\n  gameStatus: GameStatusTypes.UPDATE_READY\n  userId: string\n  isReady: boolean\n}\nexport interface UpdateAllPlayersPayload {\n  gameStatus: GameStatusTypes.UPDATE_ALL_USERS\n  users: SingleUser[]\n}\nexport interface AddPlayerPayload {\n  gameStatus: GameStatusTypes.ADD_PLAYER\n  user: SingleUser\n}\nexport interface RemovePlayerPayload {\n  gameStatus: GameStatusTypes.REMOVE_PLAYER\n  userId: string\n}\nexport type GameStartPayload = GamePlayingStatusFromSocketPayload\nexport interface UpdatePlayedResultPayload {\n  gameStatus: GameStatusTypes.SET_PLAYED_RESULT\n  resultType: PlayedResultType\n  passedRounds: number\n  playedResult?: ComparedPlayedResult\n}\nexport interface GameContinuedFailedPayload {\n  gameStatus: GameStatusTypes.SET_CONTINUE_GAME_FAIL\n}\n\nexport type GameStatusPayload = \n  PlayerUpdateReadyPayload |\n  UpdateAllPlayersPayload |\n  AddPlayerPayload | \n  RemovePlayerPayload |\n  GameStartPayload |\n  UpdatePlayedResultPayload |\n  GameContinuedFailedPayload\n\nconst ItoSocket = {\n  onListenGameStatus({\n    onAddPlayer, onRemovePlayer, onUpdatePlayerReady, onUpdateAllPlayers, onGameStart, onGetComparedResult, onGameContinuedFailed\n  }: {\n    onRemovePlayer?: Callback\n    onAddPlayer?: Callback\n    onUpdatePlayerReady?: Callback\n    onUpdateAllPlayers?: Callback\n    onGameStart?: (payload: GameStartPayload) => any\n    onGameContinuedFailed?: Callback\n    onGetComparedResult?: (payload: UpdatePlayedResultPayload) => any\n  }) {\n    socket.on(SOCKET_EVENT.GAME_STATUS, (payload: GameStatusPayload) => {\n      console.log(payload);\n      if(payload) {\n        switch (payload.gameStatus) {\n          case GameStatusTypes.UPDATE_ALL_USERS:\n            return onUpdateAllPlayers && onUpdateAllPlayers(payload);\n          case GameStatusTypes.ADD_PLAYER:\n            return onAddPlayer && onAddPlayer(payload);\n          case GameStatusTypes.UPDATE_READY:\n            return onUpdatePlayerReady && onUpdatePlayerReady(payload);\n          case GameStatusTypes.REMOVE_PLAYER:\n            return onRemovePlayer && onRemovePlayer(payload);\n          case GameStatusTypes.START: {\n            return onGameStart && onGameStart(payload);\n          }\n          case GameStatusTypes.SET_PLAYED_RESULT:\n            return onGetComparedResult && onGetComparedResult(payload);\n          case GameStatusTypes.SET_CONTINUE_GAME_FAIL:\n            return onGameContinuedFailed && onGameContinuedFailed();\n          default:\n            break;\n        }\n      }\n    });\n    \n    return () => socket.off(SOCKET_EVENT.GAME_STATUS);\n  },\n\n  sendUserAction(payload: Record<string, any>) {\n    socket.emit(SOCKET_EVENT.USER_ACTION, payload);\n  },\n\n  sendUserReady({ userId, isReady, }: UserReadyPayload) {\n    this.sendUserAction({\n      userActionType: USER_ACTION.SET_READY,\n      userId,\n      isReady,\n    });\n  },\n  sendUserJoinRoom({ roomId, user, }: UserJoinRoomPayload) {\n    socket.emit(SOCKET_EVENT.JOIN_ROOM, {\n      roomId,\n      user,\n    });\n  },\n  sendUserLeaveRoom({ roomId, userId, }: UserLeaveRoomPayload) {\n    socket.emit(SOCKET_EVENT.LEAVE_ROOM, {\n      roomId,\n      userId,\n    });\n  },\n\n  sendPlayCard({ userId, cardNumber, }: UserPlayCardPayload) {\n    if(cardNumber) {\n      socket.emit(SOCKET_EVENT.USER_ACTION, ({\n        userActionType: USER_ACTION.PLAY_CARD,\n        userId,\n        cardNumber, \n      }));\n      return true;\n    }\n    return false;\n  },\n\n  sendConfirmContinue(userId: string) {\n    socket.emit(SOCKET_EVENT.USER_ACTION, {\n      userActionType: USER_ACTION.CONFIRM_CONTINUE_GAME,\n      userId,\n    });\n  },\n  sendConfirmLeave() {\n    socket.emit(SOCKET_EVENT.USER_ACTION, {\n      userActionType: USER_ACTION.CONFIRM_LEAVE_GAME,\n    });\n  },\n};\n\nexport default ItoSocket;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useEnterSocketRoom.ts",["259","260"],"import { SingleUser } from \"common-types\";\nimport ItoSocket from \"constants/itoSocket\";\nimport { useEffect } from \"react\";\n\nexport interface UseEnterSocketRoomOptions {\n  roomId: string\n  user: SingleUser\n}\n\nconst useEnterSocketRoom = ({\n  roomId, user\n}: UseEnterSocketRoomOptions) => {\n  useEffect(() => {\n    // 加入該房間\n    if(roomId) {\n      console.log(`Enter room: ${roomId}`);\n      ItoSocket.sendUserJoinRoom({\n        user: user,\n        roomId,\n      });\n    }\n    \n    return () => {\n      console.log('leave room');\n      ItoSocket.sendUserLeaveRoom({\n        roomId,\n        userId: user.id,\n      });\n    };\n  }, [roomId, JSON.stringify(user)]);\n};\n\nexport default useEnterSocketRoom;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/functions/usePlayingPart.ts",["261","262","263","264","265","266"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/FailSuccessResult.tsx",["267"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ContinuedResult.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useToggle.ts",[],["268","269"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/index.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/context.ts",["270"],"import { GamePlayingStatus, SingleUser } from \"common-types\";\nimport { combineReducers } from \"react-function-helpers\";\nimport { createContextStore, createContextValueFn } from 'react-function-helpers/lib/functions/contextHelpers';\nimport ContextWrapperFn from \"react-function-helpers/lib/functions/ContextWrapper\";\nimport reducers from \"reducers\";\n\nexport interface GamePlayingStatusState {\n  message: string\n  roomId: string\n  status: GamePlayingStatus | null\n}\n\nexport interface ItoState {\n  user: SingleUser\n  gamePlayingStatus: GamePlayingStatusState\n}\nconst userId = ~~(Math.random() * 100000);\nexport const initItoState: ItoState = {\n  user: {\n    id: String(userId),\n    // id: '',\n    name: 'Mock User ' + userId\n  },\n  gamePlayingStatus: {\n    message: '',\n    roomId: '',\n    status: null,\n  },\n};\n\nexport const ContextValue = createContextValueFn(initItoState, reducers);\nconst ContextStore = createContextStore(initItoState);\n\nexport default ContextStore;\nexport const ContextWrapper = ContextWrapperFn(ContextValue, ContextStore);","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/RoomPartContainer.tsx",["271"],"import React from 'react';\nimport { Box } from '@material-ui/core';\nimport RoomPart from '../components/RoomPart';\nimport useRoomPart from './functions/useRoomPart';\n\nconst RoomPartContainer = () => {\n  const roomPartState = useRoomPart();\n  \n  return (\n    <RoomPart \n      loading={roomPartState.loading}\n      roomListData={roomPartState.roomListData}\n      onEnterRoom={roomPartState.handleEnterRoom}\n      onCreateRoom={roomPartState.handleCreateRoom}\n    />\n  );\n};\n\nexport default RoomPartContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/WaitingRoomPartContainer.tsx",["272"],"import React from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport WaitingRoomPart from '../../components/WaitingRoom/WaitingRoomPart';\nimport useWaitingRoomPart, { UseWaitingRoomPartOptions } from './functions/useWaitingRoomPart';\nimport { MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { setGamePlayingStatus } from 'actions';\nimport { connectCtx } from 'react-function-helpers';\nimport ContextStore from 'constants/context';\nimport { WaitingRoomPartContainerProps } from './types';\n\nconst WaitingRoomPartContainer = (props: WaitingRoomPartContainerProps) => {\n  const {\n    isReady,\n    loading,\n    room,\n    playerListData,\n    handleSetReady,\n  } = useWaitingRoomPart(props);\n\n  if(room) {\n    return (\n      <WaitingRoomPart\n        roomName={room.name || room.id}\n        isPlayerReady={isReady}\n        playerListData={playerListData}\n        onReady={handleSetReady}\n      />\n    );\n  }\n  else if(loading) {\n    return (\n      <CircularProgress />\n    );\n  }\n  return null;\n};\n\nexport interface OwnProps {\n  \n}\ninterface Dispatches extends Pick<UseWaitingRoomPartOptions, 'setGamePlayingStatusToCtx'> {\n\n}\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, Dispatches> = (dispatch) => {\n  return ({\n    setGamePlayingStatusToCtx: (payload) => {\n      const action = setGamePlayingStatus(payload);\n      dispatch(action);\n      return action;\n    }\n  });\n};\n\n\nconst WaitingRoomPartContainerWithCtx = connectCtx(ContextStore)(undefined, mapDispatchToProps)(WaitingRoomPartContainer);\n\nexport default WaitingRoomPartContainerWithCtx;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayingPart.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ThemeQuestion.tsx",["273"],"import React from 'react';\nimport { Box, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { ThemeQuestionProps } from './types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n}));\n\nconst ThemeQuestion = (props: ThemeQuestionProps) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant={'h5'}>\n        {props.question}\n      </Typography>\n      <Typography>\n        {props.supplement}\n      </Typography>\n    </Paper>\n  );\n};\n\nexport default ThemeQuestion;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeList.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyButton.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomList.tsx",["274"],"import React from 'react';\nimport { Box, List, Typography } from '@material-ui/core';\nimport RoomItem from './RoomItem';\nimport { RoomListProps } from './types';\n\nconst RoomList = (props: RoomListProps) => {\n  return (\n    <List>\n      {props.roomListData.map((r, i) => (\n        <RoomItem key={i} {...r} />\n      ))}\n      {props.roomListData.length === 0 && (\n        <Typography variant={'h5'} color={'initial'} style={{\n          opacity: 0.3,\n        }}>\n          {'No Rooms found :('}\n        </Typography>\n      )}\n    </List>\n  );\n};\n\nexport default RoomList;","/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRoom.ts",["275"],"import { SingleRoom } from \"common-types\";\nimport { API_URI } from \"constants/API\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport { useEffect } from \"react\";\n\nconst getURI = (roomId='') => API_URI + '/room/' + roomId;\n\nconst useQueryRoom = ({ roomId }: { roomId: string}) => {\n  const fetched = useFetch<SingleRoom | undefined>({\n    apiPath: getURI(roomId),\n    initResponseData: undefined,\n  });\n\n  useEffect(() => {\n    fetched.fetchData();\n  }, []);\n\n  return ({\n    ...fetched,\n    room: fetched.responseData,\n  });\n};\n\nexport default useQueryRoom;",["276","277"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/API.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/ROUTES.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateRoomPartContainer.tsx",["278"],"import React from 'react';\nimport { Box } from '@material-ui/core';\nimport CreateRoomPart from '../components/CreateRoomPart';\nimport useCreateRoomPart from './functions/useCreateRoomPart';\n\nconst CreateRoomPartContainer = () => {\n  const {\n    value,\n    handleChangeInput,\n    handleCreateRoom,\n  } = useCreateRoomPart();\n\n  return (\n    <CreateRoomPart\n      value={value}\n      onChange={handleChangeInput}\n      onCreateRoom={handleCreateRoom}\n    />\n  );\n};\n\nexport default CreateRoomPartContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/HeaderContainer.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/PlayingPartContainer.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/functions/useRoomPart.ts",["279","280","281","282","283","284"],"import useQueryRooms from \"api/custom-hooks/useQueryRooms\";\nimport { QUERY_ROOM_URI } from \"constants/API\";\nimport ROUTES from \"constants/ROUTES\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { EnterRoomFn, RoomItemData, RoomPartProps } from \"../../components/types\";\n\n\n\nconst useRoomPart = () => {\n  const history = useHistory();\n  const fetched = useQueryRooms();\n\n  const handleCreateRoom = useCallback(() => {\n    history.push(ROUTES.createRoom);\n  }, [history]);\n\n  const handleEnterRoom: EnterRoomFn = useCallback((roomId) => () => {\n    const URI = \n    history.push(ROUTES.room, );\n  }, []);\n\n  const roomListData: RoomItemData[] = useMemo(() => (\n    fetched.responseData.map(r => ({\n      // --todo--要把資料庫的players改掉\n      room: r,\n      playersAmount: r.users.length,\n    }))\n  ), [fetched.responseData]);\n\n  return ({\n    ...fetched,\n    handleEnterRoom,\n    handleCreateRoom,\n    roomListData,\n  });\n};\n\nexport default useRoomPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useFetch.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/setObjPropertyByKeysAndValue.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/regExps.ts",["285"],"\nexport const replaceRouterParamsRegExp = /\\:.*/g;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayArea.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeItem.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/CTAButton.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateRoomPart.ts",["286"],"import { SingleRoom } from \"common-types\";\nimport { CREATE_ROOM_URI } from \"constants/API\";\nimport ContextStore from \"constants/context\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport useInput from \"lib/custom-hooks/useInput\";\nimport { useCallback, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nexport const getRandomRoomName = () => (\n  `room-${~~(Math.random() * 100000)}`\n);\n\nconst useCreateRoomPart = () => {\n  const {\n    state: {\n      user,\n    },\n  } = useContext(ContextStore);\n  const history = useHistory();\n  const {\n    value,\n    handleChangeInput,\n  } = useInput({\n    initValue: '',\n  });\n  const fetched = useFetch<SingleRoom | undefined>({\n    apiPath: CREATE_ROOM_URI,\n    initResponseData: undefined,\n    isPostMethod: true,\n  });\n\n  const handleCreateRoom = useCallback(() => {\n    try {\n      fetched.fetchData({\n        postForm: {\n          type: 'CREATE',\n          name: value || getRandomRoomName(),\n          user,\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    };\n  }, [fetched, value, user]);\n\n  useEffect(() => {\n    fetched.responseData && \n    history.push('/room/' + (fetched.responseData as any)._id);\n  }, [fetched.responseData]);\n\n  return ({\n    value,\n    handleChangeInput,\n    handleCreateRoom,\n  });\n};\n\nexport default useCreateRoomPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/reducers/index.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerItem.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/actions/index.ts",["287"],"import { GamePlayingStatus, SingleUser } from \"common-types\";\nimport { GamePlayingStatusState } from \"constants/context\";\n\nexport enum ActionTypes {\n  SET_GAME_PLAYING_STATUS,\n  UPDATE_GAME_PLAYING_STATUS,\n  RESET_GAME_PLAYING_STATUS,\n\n  SET_USER,\n  RESET_USER,\n}\n\nexport interface SetGamePlayingStatusPayload extends GamePlayingStatusState {\n  \n}\nexport interface UpdateGamePlayingStatusPayload {\n  key: string // 例如 \"status.myCardNow\"\n  value: any\n}\nexport interface SetGamePlayingStatus {\n  type: ActionTypes.SET_GAME_PLAYING_STATUS\n  payload: SetGamePlayingStatusPayload\n}\nexport interface UpdateGamePlayingStatus {\n  type: ActionTypes.UPDATE_GAME_PLAYING_STATUS\n  payload: UpdateGamePlayingStatusPayload\n}\nexport interface ResetGamePlayingStatus {\n  type: ActionTypes.RESET_GAME_PLAYING_STATUS\n}\n\nexport const setGamePlayingStatus = (payload: SetGamePlayingStatusPayload) => ({\n  type: ActionTypes.SET_GAME_PLAYING_STATUS,\n  payload,\n});\nexport const updateGamePlayingStatus = (payload: UpdateGamePlayingStatusPayload) => ({\n  type: ActionTypes.UPDATE_GAME_PLAYING_STATUS,\n  payload,\n});\nexport const resetGamePlayingStatus = () => ({\n  type: ActionTypes.RESET_GAME_PLAYING_STATUS,\n});\n\n\nexport interface SetUserPayload extends SingleUser {\n  \n}\nexport interface SetUser {\n  type: ActionTypes.SET_USER\n  payload: SetUserPayload\n}\n\nexport const setUser = (payload: SetUserPayload) => ({\n  type: ActionTypes.SET_USER,\n  payload,\n});\n\n\nexport type ItoActions = \n  SetGamePlayingStatus |\n  UpdateGamePlayingStatus |\n  SetUser\n\n","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PassedRoundsInfo.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/roomResolvers.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/checkIsRoomsPage.ts",[],{"ruleId":"288","severity":1,"message":"289","line":2,"column":41,"nodeType":"290","messageId":"291","endLine":2,"endColumn":48},{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"288","severity":1,"message":"296","line":2,"column":15,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"292","replacedBy":"297"},{"ruleId":"294","replacedBy":"298"},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"288","severity":1,"message":"300","line":2,"column":41,"nodeType":"290","messageId":"291","endLine":2,"endColumn":51},{"ruleId":"288","severity":1,"message":"301","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":29},{"ruleId":"288","severity":1,"message":"302","line":58,"column":5,"nodeType":"290","messageId":"291","endLine":58,"endColumn":18},{"ruleId":"303","severity":1,"message":"304","line":28,"column":6,"nodeType":"305","endLine":28,"endColumn":8,"suggestions":"306"},{"ruleId":"292","replacedBy":"307"},{"ruleId":"294","replacedBy":"308"},{"ruleId":"292","replacedBy":"309"},{"ruleId":"294","replacedBy":"310"},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"292","replacedBy":"311"},{"ruleId":"294","replacedBy":"312"},{"ruleId":"288","severity":1,"message":"313","line":1,"column":32,"nodeType":"290","messageId":"291","endLine":1,"endColumn":59},{"ruleId":"288","severity":1,"message":"314","line":7,"column":24,"nodeType":"290","messageId":"291","endLine":7,"endColumn":36},{"ruleId":"288","severity":1,"message":"315","line":27,"column":7,"nodeType":"290","messageId":"291","endLine":27,"endColumn":24},{"ruleId":"303","severity":1,"message":"316","line":49,"column":6,"nodeType":"305","endLine":49,"endColumn":8,"suggestions":"317"},{"ruleId":"292","replacedBy":"318"},{"ruleId":"294","replacedBy":"319"},{"ruleId":"288","severity":1,"message":"320","line":2,"column":39,"nodeType":"290","messageId":"291","endLine":2,"endColumn":49},{"ruleId":"288","severity":1,"message":"321","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":21},{"ruleId":"288","severity":1,"message":"322","line":6,"column":10,"nodeType":"290","messageId":"291","endLine":6,"endColumn":18},{"ruleId":"303","severity":1,"message":"323","line":30,"column":6,"nodeType":"305","endLine":30,"endColumn":36,"suggestions":"324"},{"ruleId":"303","severity":1,"message":"325","line":30,"column":15,"nodeType":"326","endLine":30,"endColumn":35},{"ruleId":"288","severity":1,"message":"313","line":1,"column":32,"nodeType":"290","messageId":"291","endLine":1,"endColumn":59},{"ruleId":"288","severity":1,"message":"321","line":5,"column":27,"nodeType":"290","messageId":"291","endLine":5,"endColumn":38},{"ruleId":"288","severity":1,"message":"327","line":11,"column":10,"nodeType":"290","messageId":"291","endLine":11,"endColumn":14},{"ruleId":"303","severity":1,"message":"328","line":125,"column":6,"nodeType":"305","endLine":125,"endColumn":16,"suggestions":"329"},{"ruleId":"303","severity":1,"message":"330","line":137,"column":6,"nodeType":"305","endLine":137,"endColumn":15,"suggestions":"331"},{"ruleId":"303","severity":1,"message":"332","line":142,"column":6,"nodeType":"305","endLine":142,"endColumn":8,"suggestions":"333"},{"ruleId":"288","severity":1,"message":"296","line":2,"column":15,"nodeType":"290","messageId":"291","endLine":2,"endColumn":21},{"ruleId":"292","replacedBy":"334"},{"ruleId":"294","replacedBy":"335"},{"ruleId":"288","severity":1,"message":"336","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":25},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"303","severity":1,"message":"337","line":16,"column":6,"nodeType":"305","endLine":16,"endColumn":8,"suggestions":"338"},{"ruleId":"292","replacedBy":"339"},{"ruleId":"294","replacedBy":"340"},{"ruleId":"288","severity":1,"message":"299","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":13},{"ruleId":"288","severity":1,"message":"341","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":24},{"ruleId":"288","severity":1,"message":"342","line":4,"column":8,"nodeType":"290","messageId":"291","endLine":4,"endColumn":16},{"ruleId":"288","severity":1,"message":"343","line":5,"column":23,"nodeType":"290","messageId":"291","endLine":5,"endColumn":32},{"ruleId":"288","severity":1,"message":"344","line":7,"column":37,"nodeType":"290","messageId":"291","endLine":7,"endColumn":50},{"ruleId":"288","severity":1,"message":"345","line":20,"column":11,"nodeType":"290","messageId":"291","endLine":20,"endColumn":14},{"ruleId":"303","severity":1,"message":"332","line":22,"column":6,"nodeType":"305","endLine":22,"endColumn":8,"suggestions":"346"},{"ruleId":"347","severity":1,"message":"348","line":2,"column":43,"nodeType":"349","messageId":"350","endLine":2,"endColumn":44,"suggestions":"351"},{"ruleId":"303","severity":1,"message":"352","line":49,"column":6,"nodeType":"305","endLine":49,"endColumn":28,"suggestions":"353"},{"ruleId":"288","severity":1,"message":"354","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":27},"@typescript-eslint/no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["355"],"no-negated-in-lhs",["356"],"'Button' is defined but never used.",["355"],["356"],"'Box' is defined but never used.","'Typography' is defined but never used.","'PlayedResultPayload' is defined but never used.","'onCloseResult' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'history' and 'onBack'. Either include them or remove the dependency array. If 'onBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["357"],["355"],["356"],["355"],["356"],["355"],["356"],"'SetGamePlayingStatusPayload' is defined but never used.","'initItoState' is defined but never used.","'gamePlayingStatus' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'handleToggle'. Either include it or remove the dependency array.",["358"],["355"],["356"],"'GameStatus' is defined but never used.","'GAME_STATUS' is defined but never used.","'ItoState' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["359"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'send' is defined but never used.","React Hook useCallback has a missing dependency: 'handleSetResultOpen'. Either include it or remove the dependency array.",["360"],"React Hook useCallback has a missing dependency: 'setConfirmed'. Either include it or remove the dependency array.",["361"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["362"],["355"],["356"],"'combineReducers' is defined but never used.","React Hook useEffect has a missing dependency: 'fetched'. Either include it or remove the dependency array.",["363"],["355"],["356"],"'QUERY_ROOM_URI' is defined but never used.","'useFetch' is defined but never used.","'useEffect' is defined but never used.","'RoomPartProps' is defined but never used.","'URI' is assigned a value but never used.",["364"],"no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["365","366"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["367"],"'GamePlayingStatus' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"378","fix":"382"},{"messageId":"383","fix":"384","desc":"385"},{"messageId":"386","fix":"387","desc":"388"},{"desc":"389","fix":"390"},"Update the dependencies array to be: [history, onBack]",{"range":"391","text":"392"},"Update the dependencies array to be: [handleToggle]",{"range":"393","text":"394"},"Update the dependencies array to be: [roomId, user]",{"range":"395","text":"396"},"Update the dependencies array to be: [dispatch, handleSetResultOpen]",{"range":"397","text":"398"},"Update the dependencies array to be: [setConfirmed, user.id]",{"range":"399","text":"400"},"Update the dependencies array to be: [history]",{"range":"401","text":"402"},"Update the dependencies array to be: [fetched]",{"range":"403","text":"404"},{"range":"405","text":"402"},"removeEscape",{"range":"406","text":"407"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"408","text":"409"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [fetched.responseData, history]",{"range":"410","text":"411"},[624,626],"[history, onBack]",[1748,1750],"[handleToggle]",[625,655],"[roomId, user]",[3637,3647],"[dispatch, handleSetResultOpen]",[4064,4073],"[setConfirmed, user.id]",[4193,4195],"[history]",[460,462],"[fetched]",[707,709],[43,44],"",[43,43],"\\",[1214,1236],"[fetched.responseData, history]"]