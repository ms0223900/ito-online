[{"/Users/PenguinCho/Desktop/ito-online/frontend/src/App.tsx":"1","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomPart.tsx":"2","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateRoomPart.tsx":"3","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/Header.tsx":"4","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayedResult.tsx":"5","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/BackButton.tsx":"6","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInput.ts":"7","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomItem.tsx":"8","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/GameoverResult.tsx":"9","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/fetchDataByAPI.ts":"10","/Users/PenguinCho/Desktop/ito-online/frontend/src/config.ts":"11","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/makeGamePlayingPayload.ts":"12","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/WaitingRoomPart.tsx":"13","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerList.tsx":"14","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyStandBy.tsx":"15","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/useWaitingRoomPart.ts":"16","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/itoSocket.ts":"17","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useEnterSocketRoom.ts":"18","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/functions/usePlayingPart.ts":"19","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/FailSuccessResult.tsx":"20","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ContinuedResult.tsx":"21","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useToggle.ts":"22","/Users/PenguinCho/Desktop/ito-online/frontend/src/index.tsx":"23","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/context.ts":"24","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/RoomPartContainer.tsx":"25","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/WaitingRoomPartContainer.tsx":"26","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayingPart.tsx":"27","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ThemeQuestion.tsx":"28","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeList.tsx":"29","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyButton.tsx":"30","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomList.tsx":"31","/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRoom.ts":"32","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/API.ts":"33","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/ROUTES.ts":"34","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateRoomPartContainer.tsx":"35","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/HeaderContainer.tsx":"36","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/PlayingPartContainer.tsx":"37","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/functions/useRoomPart.ts":"38","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useFetch.ts":"39","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/setObjPropertyByKeysAndValue.ts":"40","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/regExps.ts":"41","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayArea.tsx":"42","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeItem.tsx":"43","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/CTAButton.tsx":"44","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateRoomPart.ts":"45"},{"size":1710,"mtime":1612345385756,"results":"46","hashOfConfig":"47"},{"size":651,"mtime":1612146922974,"results":"48","hashOfConfig":"47"},{"size":760,"mtime":1612237269235,"results":"49","hashOfConfig":"47"},{"size":813,"mtime":1612320718470,"results":"50","hashOfConfig":"47"},{"size":1729,"mtime":1612511126781,"results":"51","hashOfConfig":"47"},{"size":804,"mtime":1612320718469,"results":"52","hashOfConfig":"47"},{"size":752,"mtime":1612146922977,"results":"53","hashOfConfig":"47"},{"size":1215,"mtime":1612320718472,"results":"54","hashOfConfig":"47"},{"size":537,"mtime":1612489376890,"results":"55","hashOfConfig":"47"},{"size":947,"mtime":1612320718477,"results":"56","hashOfConfig":"47"},{"size":1119,"mtime":1612497545634,"results":"57","hashOfConfig":"47"},{"size":1581,"mtime":1612401881292,"results":"58","hashOfConfig":"47"},{"size":645,"mtime":1612161310720,"results":"59","hashOfConfig":"47"},{"size":397,"mtime":1612160971799,"results":"60","hashOfConfig":"47"},{"size":463,"mtime":1612158902578,"results":"61","hashOfConfig":"47"},{"size":4048,"mtime":1612511331630,"results":"62","hashOfConfig":"47"},{"size":4242,"mtime":1612511608136,"results":"63","hashOfConfig":"47"},{"size":706,"mtime":1612506924581,"results":"64","hashOfConfig":"47"},{"size":5489,"mtime":1612516926002,"results":"65","hashOfConfig":"47"},{"size":1106,"mtime":1612517028204,"results":"66","hashOfConfig":"47"},{"size":674,"mtime":1612514677658,"results":"67","hashOfConfig":"47"},{"size":563,"mtime":1612516790781,"results":"68","hashOfConfig":"47"},{"size":728,"mtime":1612320718476,"results":"69","hashOfConfig":"47"},{"size":1044,"mtime":1612401881293,"results":"70","hashOfConfig":"47"},{"size":506,"mtime":1612156422768,"results":"71","hashOfConfig":"47"},{"size":1615,"mtime":1612337438708,"results":"72","hashOfConfig":"47"},{"size":545,"mtime":1612171701920,"results":"73","hashOfConfig":"47"},{"size":682,"mtime":1612163721934,"results":"74","hashOfConfig":"47"},{"size":763,"mtime":1612401881291,"results":"75","hashOfConfig":"47"},{"size":359,"mtime":1612236838473,"results":"76","hashOfConfig":"47"},{"size":568,"mtime":1612146922974,"results":"77","hashOfConfig":"47"},{"size":564,"mtime":1612232566938,"results":"78","hashOfConfig":"47"},{"size":269,"mtime":1612146922976,"results":"79","hashOfConfig":"47"},{"size":277,"mtime":1612325606515,"results":"80","hashOfConfig":"47"},{"size":504,"mtime":1612146922973,"results":"81","hashOfConfig":"47"},{"size":553,"mtime":1612320718470,"results":"82","hashOfConfig":"47"},{"size":577,"mtime":1612330751779,"results":"83","hashOfConfig":"47"},{"size":1071,"mtime":1612320718474,"results":"84","hashOfConfig":"47"},{"size":1398,"mtime":1612320718477,"results":"85","hashOfConfig":"47"},{"size":599,"mtime":1612489376895,"results":"86","hashOfConfig":"47"},{"size":50,"mtime":1612232566945,"results":"87","hashOfConfig":"47"},{"size":827,"mtime":1612401881291,"results":"88","hashOfConfig":"47"},{"size":487,"mtime":1612162539623,"results":"89","hashOfConfig":"47"},{"size":592,"mtime":1612401881290,"results":"90","hashOfConfig":"47"},{"size":1351,"mtime":1612320718471,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sell2s",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"110"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/PenguinCho/Desktop/ito-online/frontend/src/App.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomPart.tsx",["204"],"import React from 'react';\nimport { Box, Button, CircularProgress, Divider } from '@material-ui/core';\nimport RoomList from './RoomList';\nimport { RoomPartProps } from './types';\n\nconst RoomPart = (props: RoomPartProps) => {\n  return (\n    <Box\n      textAlign={'center'}\n    >\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <RoomList {...props} />\n      )}\n      {/* <Box paddingY={1}>\n        <Divider />\n      </Box> */}\n      <Button \n        color={'primary'} \n        variant={'outlined'}\n        onClick={props.onCreateRoom}\n      >\n        {'Create Room'}\n      </Button>\n    </Box>\n  );\n};\n\nexport default RoomPart;",["205","206"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateRoomPart.tsx",["207"],"import React from 'react';\nimport { Box, Button, Divider, TextField } from '@material-ui/core';\nimport { CreateRoomPartProps } from './types';\nimport CTAButton from 'components/ito/Common/components/CTAButton';\n\nconst CreateRoomPart = (props: CreateRoomPartProps) => {\n  return (\n    <Box\n      textAlign={'center'}\n    >\n      <TextField\n        value={props.value}\n        variant={'outlined'}\n        placeholder={'Input room name...'}\n        onChange={props.onChange}\n      />\n      <Box paddingY={1}>\n        <Divider />\n      </Box>\n      <CTAButton\n        disabled={props.loading}\n        onClick={props.onCreateRoom}\n      >\n        {props.loading ? 'Creating...' : 'Create Room'}\n      </CTAButton>\n    </Box>\n  );\n};\n\nexport default CreateRoomPart;",["208","209"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/Header.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayedResult.tsx",["210","211","212"],"import React from 'react';\nimport { Box, makeStyles, Modal, Paper, Typography } from '@material-ui/core';\nimport { PlayedResultPayload, PlayedResultProps } from './types';\nimport FailSuccessResult from './FailSuccessResult';\nimport ContinuedResult from './ContinuedResult';\nimport GameoverResult from './GameoverResult';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  content: {\n    backgroundColor: '#fff',\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    \n  }\n}));\n\nexport const getModalResult = (props: PlayedResultProps) => {\n  const { resultPayload } = props;\n\n  if(resultPayload) {\n    if(resultPayload.resultType === 'CONTINUED') {\n      return (\n        <ContinuedResult \n          {...props} \n          passedRounds={resultPayload.passedRounds}\n        />\n      );\n    } \n    \n    else if(resultPayload.resultType === 'GAME_OVER') {\n      return (\n        <GameoverResult \n          {...props} \n          passedRounds={resultPayload.passedRounds}\n        />\n      );\n    }\n\n    return (\n      <FailSuccessResult \n        {...resultPayload}\n        onConfirmResult={props.onCloseResult}\n      />\n    );\n  }\n};\n\nconst PlayedResult = (props: PlayedResultProps) => {\n  const {\n    isResultOpen,\n    resultPayload,\n    onCloseResult,\n  } = props;\n  const classes = useStyles();\n\n  if(!resultPayload) {\n    return null;\n  }\n\n  return (\n    <>\n      <Modal \n        className={classes.modal}\n        open={isResultOpen}\n        onClose={onCloseResult}\n      >\n        <Paper className={classes.content}>\n          {getModalResult(props)}\n        </Paper>\n      </Modal>\n    </>\n  );\n};\n\nexport default PlayedResult;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/BackButton.tsx",["213"],"import React, { useCallback } from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { ArrowLeftOutlined } from '@material-ui/icons';\nimport { Callback } from 'common-types';\nimport { useHistory } from 'react-router';\n\nexport interface BackButtonProps {\n  onBack?: Callback\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '&:hover': {\n      backgroundColor: '#ddd',\n    }\n  }\n}));\n\nconst BackButton = ({\n  onBack,\n}: BackButtonProps) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  const handleBack = useCallback(() => {\n    history.goBack();\n    onBack && onBack();\n  }, []);\n  \n  return (\n    <Box className={classes.root} padding={1} onClick={handleBack}>\n      <ArrowLeftOutlined fontSize={'large'} />\n    </Box>\n  );\n};\n\nexport default BackButton;",["214","215"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInput.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomItem.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/GameoverResult.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/fetchDataByAPI.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/config.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/makeGamePlayingPayload.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/WaitingRoomPart.tsx",[],["216","217"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerList.tsx",["218"],"import React from 'react';\nimport { Box, List } from '@material-ui/core';\nimport { PlayerListProps } from './types';\nimport PlayerItem from './PlayerItem';\n\nconst PlayerList = (props: PlayerListProps) => {\n  return (\n    <List>\n      {props.playerListData.map((p, i) => (\n        <PlayerItem\n          key={i}\n          {...p}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default PlayerList;  ","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyStandBy.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/useWaitingRoomPart.ts",["219","220","221","222"],"import { setGamePlayingStatus, SetGamePlayingStatusPayload } from \"actions\";\nimport useQueryRoom from \"api/custom-hooks/useQueryRoom\";\nimport { socket } from \"App\";\nimport { GamePlayingStatusFromSocketPayload, SingleRoom, SingleUser } from \"common-types\";\nimport { PlayerItemProps } from \"components/ito/RoomPart/components/WaitingRoom/types\";\nimport { SOCKET_EVENT, USER_ACTION } from \"config\";\nimport ContextStore, { initItoState } from \"constants/context\";\nimport ItoSocket, { AddPlayerPayload, PlayerUpdateReadyPayload, RemovePlayerPayload, UpdateAllPlayersPayload } from \"constants/itoSocket\";\nimport ROUTES, { RouterParams } from \"constants/ROUTES\";\nimport useEnterSocketRoom from \"lib/custom-hooks/useEnterSocketRoom\";\nimport useToggle from \"lib/custom-hooks/useToggle\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport makeGamePlayingPayload from \"./makeGamePlayingPayload\";\nimport roomResolvers from \"./roomResolvers\";\n\nexport interface UseWaitingRoomPartOptions {\n  setGamePlayingStatusToCtx: typeof setGamePlayingStatus\n}\n\nconst useWaitingRoomPart = ({\n  setGamePlayingStatusToCtx,\n}: UseWaitingRoomPartOptions) => {\n  const {\n    state: {\n      user,\n      gamePlayingStatus,\n    }\n  } = useContext(ContextStore);\n\n  const {\n    roomId,\n  } = useParams<RouterParams>();\n  const history = useHistory();\n  useEnterSocketRoom({\n    user, roomId,\n  });\n\n  const {\n    toggle: isReady,\n    handleToggle,\n  } = useToggle(false);\n  const queried = useQueryRoom({ roomId, });\n  const [room, setRoom] = useState<SingleRoom>();\n  const [users, setUsers] = useState<SingleUser[]>([]);\n\n  const handleSetReady = useCallback(() => {\n    handleToggle();\n  }, []);\n\n  const handleUpdateRoomPlayerReady = useCallback((payload: PlayerUpdateReadyPayload) => {\n    setRoom(_room => (\n      roomResolvers.udpateRoomUser({ room: _room, }, payload)\n    ));\n  }, []);\n  const handleUpdateAllPlayers = useCallback((payload: UpdateAllPlayersPayload) => {\n    setUsers(payload.users);\n  }, []);\n  const handleAddPalyerToRoom = useCallback((payload: AddPlayerPayload) => {\n    setRoom(_room => (\n      roomResolvers.addPlayer({ room: _room, }, payload)\n    ));\n  }, []);\n  const handleRemovePlayerFromRoom = useCallback((payload: RemovePlayerPayload) => {\n    setUsers(users => (\n      roomResolvers.removePlayer({ users, }, payload)\n    ));\n  }, []);\n  const handleGameStart = useCallback((payload: GamePlayingStatusFromSocketPayload) => {\n    console.log(payload);\n    // 轉為user自己的\n    const ctxPayload = makeGamePlayingPayload({\n      user,\n      roomId,\n      payloadFromSocket: payload,\n    });\n\n    setGamePlayingStatusToCtx(ctxPayload as any);\n    history.push(ROUTES.playing);\n  }, [history, roomId, setGamePlayingStatusToCtx, user]);\n\n  useEffect(() => {\n    // 取得房間最新狀態\n    const listener = ItoSocket.onListenGameStatus({\n      onUpdateAllPlayers: handleUpdateAllPlayers,\n      onUpdatePlayerReady: handleUpdateRoomPlayerReady,\n      onAddPlayer: handleAddPalyerToRoom,\n      onRemovePlayer: handleRemovePlayerFromRoom,\n      onGameStart: handleGameStart,\n    });\n    return () => {\n      listener();\n    };\n  }, [handleAddPalyerToRoom, handleGameStart, handleRemovePlayerFromRoom, handleUpdateAllPlayers, handleUpdateRoomPlayerReady]);\n\n  useEffect(() => {\n    ItoSocket.sendUserReady({\n      userId: user.id,\n      isReady,\n    });\n  }, [isReady, user.id]);\n\n  useEffect(() => {\n    if(queried.room) {\n      setRoom(queried.room);\n      socket.emit(SOCKET_EVENT.USER_ACTION, {\n        userActionType: USER_ACTION.GET_ALL_PLAYERS_READY\n      });\n    }\n  }, [queried.room]);\n\n  const playerListData: PlayerItemProps[] = useMemo(() => (\n    users.map(p => ({\n      ...p,\n      isReady: !!(p.isReady),\n      isMe: p.id === user.id,\n      playerName: p.name || p.id,\n    }))\n  ), [users, user.id]);\n\n  return ({\n    isReady,\n    loading: false,\n    room,\n    playerListData,\n    handleSetReady,\n  });\n};\n\nexport default useWaitingRoomPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/itoSocket.ts",["223","224","225"],"\nimport { Callback, GamePlayingStatus, GameStatus, GameStatusKeys, ComparedPlayedResult, SingleUser, GamePlayingStatusFromSocketPayload, PlayedResultType } from 'common-types';\nimport { GAME_STATUS, SOCKET_EVENT, USER_ACTION, GameStatusTypes } from 'config';\nimport { io } from 'socket.io-client';\nimport { API_URI } from './API';\nimport { ItoState } from './context';\n\nexport const socket = io(API_URI);\n\nexport interface UserReadyPayload {\n  userId: string\n  isReady: boolean\n}\nexport interface UserJoinRoomPayload {\n  roomId: string\n  user: SingleUser\n}\nexport interface UserLeaveRoomPayload {\n  roomId: string\n  userId: string\n}\nexport interface UserPlayCardPayload {\n  userId: string\n  cardNumber: GamePlayingStatus['myCardNow']\n}\n\nexport interface BasicGameStatusPayload {\n  gameStatus: GameStatusKeys\n}\nexport interface PlayerUpdateReadyPayload {\n  gameStatus: GameStatusTypes.UPDATE_READY\n  userId: string\n  isReady: boolean\n}\nexport interface UpdateAllPlayersPayload {\n  gameStatus: GameStatusTypes.UPDATE_ALL_USERS\n  users: SingleUser[]\n}\nexport interface AddPlayerPayload {\n  gameStatus: GameStatusTypes.ADD_PLAYER\n  user: SingleUser\n}\nexport interface RemovePlayerPayload {\n  gameStatus: GameStatusTypes.REMOVE_PLAYER\n  userId: string\n}\nexport type GameStartPayload = GamePlayingStatusFromSocketPayload\nexport interface UpdatePlayedResultPayload {\n  gameStatus: GameStatusTypes.SET_PLAYED_RESULT\n  resultType: PlayedResultType\n  passedRounds: number\n  playedResult?: ComparedPlayedResult\n}\n\nexport type GameStatusPayload = \n  PlayerUpdateReadyPayload |\n  UpdateAllPlayersPayload |\n  AddPlayerPayload | \n  RemovePlayerPayload |\n  GameStartPayload |\n  UpdatePlayedResultPayload\n\nconst ItoSocket = {\n  onListenGameStatus({\n    onAddPlayer, onRemovePlayer, onUpdatePlayerReady, onUpdateAllPlayers, onGameStart, onGetComparedResult,\n  }: {\n    onRemovePlayer?: Callback\n    onAddPlayer?: Callback\n    onUpdatePlayerReady?: Callback\n    onUpdateAllPlayers?: Callback\n    onGameStart?: (payload: GameStartPayload) => any\n    onGetComparedResult?: (payload: UpdatePlayedResultPayload) => any\n  }) {\n    socket.on(SOCKET_EVENT.GAME_STATUS, (payload: GameStatusPayload) => {\n      console.log(payload);\n      if(payload) {\n        switch (payload.gameStatus) {\n          case GameStatusTypes.UPDATE_ALL_USERS:\n            return onUpdateAllPlayers && onUpdateAllPlayers(payload);\n          case GameStatusTypes.ADD_PLAYER:\n            return onAddPlayer && onAddPlayer(payload);\n          case GameStatusTypes.UPDATE_READY:\n            return onUpdatePlayerReady && onUpdatePlayerReady(payload);\n          case GameStatusTypes.REMOVE_PLAYER:\n            return onRemovePlayer && onRemovePlayer(payload);\n          case GameStatusTypes.START: {\n            return onGameStart && onGameStart(payload);\n          }\n          case GameStatusTypes.SET_PLAYED_RESULT:\n            return onGetComparedResult && onGetComparedResult(payload);\n          default:\n            break;\n        }\n      }\n    });\n    \n    return () => socket.off(SOCKET_EVENT.GAME_STATUS);\n  },\n\n  sendUserAction(payload: Record<string, any>) {\n    socket.emit(SOCKET_EVENT.USER_ACTION, payload);\n  },\n\n  sendUserReady({ userId, isReady, }: UserReadyPayload) {\n    this.sendUserAction({\n      userActionType: USER_ACTION.SET_READY,\n      userId,\n      isReady,\n    });\n  },\n  sendUserJoinRoom({ roomId, user, }: UserJoinRoomPayload) {\n    socket.emit(SOCKET_EVENT.JOIN_ROOM, {\n      roomId,\n      user,\n    });\n  },\n  sendUserLeaveRoom({ roomId, userId, }: UserLeaveRoomPayload) {\n    socket.emit(SOCKET_EVENT.LEAVE_ROOM, {\n      roomId,\n      userId,\n    });\n  },\n\n  sendPlayCard({ userId, cardNumber, }: UserPlayCardPayload) {\n    if(cardNumber) {\n      socket.emit(SOCKET_EVENT.USER_ACTION, ({\n        userActionType: USER_ACTION.PLAY_CARD,\n        userId,\n        cardNumber, \n      }));\n      return true;\n    }\n    return false;\n  },\n\n  sendConfirmContinue(userId: string) {\n    socket.emit(SOCKET_EVENT.USER_ACTION, {\n      userActionType: USER_ACTION.CONFIRM_CONTINUE_GAME,\n      userId,\n    });\n  },\n  sendConfirmLeave() {\n    socket.emit(SOCKET_EVENT.USER_ACTION, {\n      userActionType: USER_ACTION.CONFIRM_LEAVE_GAME,\n    });\n  },\n};\n\nexport default ItoSocket;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useEnterSocketRoom.ts",["226","227"],"import { SingleUser } from \"common-types\";\nimport ItoSocket from \"constants/itoSocket\";\nimport { useEffect } from \"react\";\n\nexport interface UseEnterSocketRoomOptions {\n  roomId: string\n  user: SingleUser\n}\n\nconst useEnterSocketRoom = ({\n  roomId, user\n}: UseEnterSocketRoomOptions) => {\n  useEffect(() => {\n    // 加入該房間\n    if(roomId) {\n      console.log(`Enter room: ${roomId}`);\n      ItoSocket.sendUserJoinRoom({\n        user: user,\n        roomId,\n      });\n    }\n    \n    return () => {\n      console.log('leave room');\n      ItoSocket.sendUserLeaveRoom({\n        roomId,\n        userId: user.id,\n      });\n    };\n  }, [roomId, JSON.stringify(user)]);\n};\n\nexport default useEnterSocketRoom;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/functions/usePlayingPart.ts",["228","229","230","231","232","233"],"import { setGamePlayingStatus, SetGamePlayingStatusPayload, updateGamePlayingStatus } from \"actions\";\nimport { GamePlayingStatusFromSocketPayload, SingleUser } from \"common-types\";\nimport { PlayedResultPayload, PlayingPartProps } from \"components/ito/GamePart/components/Playing/types\";\nimport makeGamePlayingPayload from \"components/ito/RoomPart/containers/WaitingRoom/functions/makeGamePlayingPayload\";\nimport { GameStatusTypes, GAME_STATUS } from \"config\";\nimport ContextStore from \"constants/context\";\nimport ItoSocket, { UpdatePlayedResultPayload } from \"constants/itoSocket\";\nimport ROUTES from \"constants/ROUTES\";\nimport useEnterSocketRoom from \"lib/custom-hooks/useEnterSocketRoom\";\nimport useToggle from \"lib/custom-hooks/useToggle\";\nimport { send } from \"process\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst handleSetGameStatus = (dispatch: any) => (user: SingleUser, roomId: string) => (payload: GamePlayingStatusFromSocketPayload) => {\n  const ctxPayload = makeGamePlayingPayload({\n    user,\n    roomId,\n    payloadFromSocket: payload,\n  });\n  dispatch(\n    setGamePlayingStatus(ctxPayload)\n  );\n};\nconst handleResetMyCardNow = (dispatch: any) => () => {\n  dispatch(\n    updateGamePlayingStatus({\n      key: 'status.myCardNow',\n      value: null,\n    })\n  );\n};\nconst handleUpdateLife = (dispatch: any) => (newLife: number) => {\n  dispatch(\n    updateGamePlayingStatus({\n      key: 'status.life.lifeNow',\n      value: newLife,\n    })\n  );\n};\n\nconst usePlayingPart = () => {\n  const {\n    toggle: isResultOpen,\n    setToggle: handleSetResultOpen,\n    handleCloseToggle: handleCloseResult,\n  } = useToggle();\n  const {\n    toggle: isConfirmedContinue,\n    setToggle: setConfirmed,\n  } = useToggle();\n  const history = useHistory();\n\n  const {\n    state: {\n      user,\n      gamePlayingStatus,\n    },\n    dispatch,\n  } = useContext(ContextStore);\n  const {\n    id: userId,\n  } = user;\n  const {\n    roomId,\n  } = gamePlayingStatus;\n  useEnterSocketRoom({\n    roomId, user,\n  });\n  console.log('Result open: ', isResultOpen);\n\n  const [playedResult, setPlayedResult] = useState<PlayedResultPayload>();\n\n\n  const handlePlayCard = useCallback(() => {\n    if(gamePlayingStatus.status) {\n      console.log(`UserId: ${user.id}`);\n      console.log(`MyCardNow: ${gamePlayingStatus.status.myCardNow}`);\n      const sender = ItoSocket.sendPlayCard({\n        userId: user.id,\n        cardNumber: gamePlayingStatus.status.myCardNow,\n      });\n      \n      sender && handleResetMyCardNow(dispatch)();\n    }\n  }, [dispatch, gamePlayingStatus.status, user.id]);\n\n  const handleGetComparedResult = useCallback((payload: UpdatePlayedResultPayload) => {\n    const {\n      resultType,\n      playedResult,\n    } = payload;\n    // open result\n    if(payload.gameStatus === GameStatusTypes.SET_PLAYED_RESULT) {\n      console.log('open result');\n      handleSetResultOpen(true);\n    }\n    \n    switch (resultType) {\n      case 'SUCCESS':\n      case 'FAIL': {\n        if(playedResult) {\n          setPlayedResult({\n            ...payload,\n            prevCardNumber: playedResult.prevCard,\n            nextCardNumber: playedResult.latestCard,\n          });\n          handleUpdateLife(dispatch)(playedResult.latestLife);\n        }\n        break;\n      }\n      case 'CONTINUED': \n      case 'GAME_OVER':\n        if(playedResult) {\n          setPlayedResult({\n            ...payload,\n            prevCardNumber: playedResult.prevCard,\n            nextCardNumber: playedResult.latestCard,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  }, [dispatch]);\n\n  const handleGameStart = useCallback((payload: GamePlayingStatusFromSocketPayload) => {\n    console.log('Game start.');\n    setConfirmed(false);\n    handleCloseResult();\n    handleSetGameStatus(dispatch)(user, roomId)(payload);\n  }, [dispatch, handleCloseResult, roomId, setConfirmed, user]);\n\n  const handleContinue = useCallback(() => {\n    setConfirmed(true);\n    ItoSocket.sendConfirmContinue(user.id);\n  }, [user.id]);\n\n  const handleOvergame = useCallback(() => {\n    ItoSocket.sendConfirmLeave();\n    history.push(ROUTES.rooms);\n  }, []);\n\n  useEffect(() => {\n    // 取得最新卡片比較結果、愛心\n    const listener = ItoSocket.onListenGameStatus({\n      onGetComparedResult: handleGetComparedResult,\n      onGameStart: handleGameStart,\n    });\n    return () => {\n      listener();\n    };\n  }, [handleGameStart, handleGetComparedResult, roomId, user, userId]);\n  // console.log(gamePlayingStatus);\n\n  const onEvents = useMemo(() => ({\n    onCloseResult: handleCloseResult,\n    onPlayCard: handlePlayCard,\n    onContinue: handleContinue,\n    onOverGame: handleOvergame,\n  }), [handleCloseResult, handleContinue, handleOvergame, handlePlayCard]);\n\n  const playingPartProps: PlayingPartProps | undefined = useMemo(() => {\n    const { status } = gamePlayingStatus;\n    return (\n      status ? ({\n        ...status.question,\n        ...playedResult,\n        ...onEvents,\n        isConfirmed: isConfirmedContinue,\n        isResultOpen,\n        cardNumberNow: status.myCardNow,\n        latestCardNumber: status.latestCard,\n        maxLife: status.life.maxLife,\n        remainLife: status.life.lifeNow,\n        resultPayload: playedResult,\n      }) : undefined\n    );\n  }, [gamePlayingStatus, playedResult, onEvents, isConfirmedContinue, isResultOpen]);\n\n  return ({\n    playingPartProps\n  });\n};\n\nexport default usePlayingPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/FailSuccessResult.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ContinuedResult.tsx",["234"],"import React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport PassedRoundsInfo from './PassedRoundsInfo';\nimport { ContinuedResultProps } from './types';\nimport CTAButton from 'components/ito/Common/components/CTAButton';\n\nconst ContinuedResult = (props: ContinuedResultProps) => {\n  return (\n    <Box>\n      <PassedRoundsInfo {...props} />\n      <Box>\n        <CTAButton disabled={props.isConfirmed} onClick={props.onContinue}>\n          {'Continue!'}\n        </CTAButton>\n        <CTAButton color={'default'} onClick={props.onOverGame}>\n          {'Leave Game'}\n        </CTAButton>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ContinuedResult;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useToggle.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/index.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/context.ts",["235"],"import { GamePlayingStatus, SingleUser } from \"common-types\";\nimport { combineReducers } from \"react-function-helpers\";\nimport { createContextStore, createContextValueFn } from 'react-function-helpers/lib/functions/contextHelpers';\nimport ContextWrapperFn from \"react-function-helpers/lib/functions/ContextWrapper\";\nimport reducers from \"reducers\";\n\nexport interface GamePlayingStatusState {\n  message: string\n  roomId: string\n  status: GamePlayingStatus | null\n}\n\nexport interface ItoState {\n  user: SingleUser\n  gamePlayingStatus: GamePlayingStatusState\n}\nconst userId = ~~(Math.random() * 100000);\nexport const initItoState: ItoState = {\n  user: {\n    id: String(userId),\n    // id: '',\n    name: 'Mock User ' + userId\n  },\n  gamePlayingStatus: {\n    message: '',\n    roomId: '',\n    status: null,\n  },\n};\n\nexport const ContextValue = createContextValueFn(initItoState, reducers);\nconst ContextStore = createContextStore(initItoState);\n\nexport default ContextStore;\nexport const ContextWrapper = ContextWrapperFn(ContextValue, ContextStore);","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/RoomPartContainer.tsx",["236"],"import React from 'react';\nimport { Box } from '@material-ui/core';\nimport RoomPart from '../components/RoomPart';\nimport useRoomPart from './functions/useRoomPart';\n\nconst RoomPartContainer = () => {\n  const roomPartState = useRoomPart();\n  \n  return (\n    <RoomPart \n      loading={roomPartState.loading}\n      roomListData={roomPartState.roomListData}\n      onEnterRoom={roomPartState.handleEnterRoom}\n      onCreateRoom={roomPartState.handleCreateRoom}\n    />\n  );\n};\n\nexport default RoomPartContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/WaitingRoomPartContainer.tsx",["237"],"import React from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport WaitingRoomPart from '../../components/WaitingRoom/WaitingRoomPart';\nimport useWaitingRoomPart, { UseWaitingRoomPartOptions } from './functions/useWaitingRoomPart';\nimport { MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { setGamePlayingStatus } from 'actions';\nimport { connectCtx } from 'react-function-helpers';\nimport ContextStore from 'constants/context';\nimport { WaitingRoomPartContainerProps } from './types';\n\nconst WaitingRoomPartContainer = (props: WaitingRoomPartContainerProps) => {\n  const {\n    isReady,\n    loading,\n    room,\n    playerListData,\n    handleSetReady,\n  } = useWaitingRoomPart(props);\n\n  if(room) {\n    return (\n      <WaitingRoomPart\n        roomName={room.name || room.id}\n        isPlayerReady={isReady}\n        playerListData={playerListData}\n        onReady={handleSetReady}\n      />\n    );\n  }\n  else if(loading) {\n    return (\n      <CircularProgress />\n    );\n  }\n  return null;\n};\n\nexport interface OwnProps {\n  \n}\ninterface Dispatches extends Pick<UseWaitingRoomPartOptions, 'setGamePlayingStatusToCtx'> {\n\n}\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, Dispatches> = (dispatch) => {\n  return ({\n    setGamePlayingStatusToCtx: (payload) => {\n      const action = setGamePlayingStatus(payload);\n      dispatch(action);\n      return action;\n    }\n  });\n};\n\n\nconst WaitingRoomPartContainerWithCtx = connectCtx(ContextStore)(undefined, mapDispatchToProps)(WaitingRoomPartContainer);\n\nexport default WaitingRoomPartContainerWithCtx;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayingPart.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ThemeQuestion.tsx",["238"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeList.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyButton.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomList.tsx",["239"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRoom.ts",["240"],"import { SingleRoom } from \"common-types\";\nimport { API_URI } from \"constants/API\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport { useEffect } from \"react\";\n\nconst getURI = (roomId='') => API_URI + '/room/' + roomId;\n\nconst useQueryRoom = ({ roomId }: { roomId: string}) => {\n  const fetched = useFetch<SingleRoom | undefined>({\n    apiPath: getURI(roomId),\n    initResponseData: undefined,\n  });\n\n  useEffect(() => {\n    fetched.fetchData();\n  }, []);\n\n  return ({\n    ...fetched,\n    room: fetched.responseData,\n  });\n};\n\nexport default useQueryRoom;","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/API.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/ROUTES.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateRoomPartContainer.tsx",["241"],"import React from 'react';\nimport { Box } from '@material-ui/core';\nimport CreateRoomPart from '../components/CreateRoomPart';\nimport useCreateRoomPart from './functions/useCreateRoomPart';\n\nconst CreateRoomPartContainer = () => {\n  const {\n    value,\n    handleChangeInput,\n    handleCreateRoom,\n  } = useCreateRoomPart();\n\n  return (\n    <CreateRoomPart\n      value={value}\n      onChange={handleChangeInput}\n      onCreateRoom={handleCreateRoom}\n    />\n  );\n};\n\nexport default CreateRoomPartContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/HeaderContainer.tsx",["242","243","244","245","246","247","248","249","250"],"import React, { useCallback, useContext } from 'react';\nimport { Box } from '@material-ui/core';\nimport Header from '../components/Header';\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\nimport ItoSocket from 'constants/itoSocket';\nimport ROUTES, { RouterParams } from 'constants/ROUTES';\nimport ContextStore, { initItoState } from 'constants/context';\n\nconst HeaderContainer = () => {\n  const {\n    state: { user, },\n  } = useContext(ContextStore);\n  \n  return (\n    <Header user={user} />\n  );\n};\n\nexport default HeaderContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/PlayingPartContainer.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/functions/useRoomPart.ts",["251","252","253","254","255","256"],"import useQueryRooms from \"api/custom-hooks/useQueryRooms\";\nimport { QUERY_ROOM_URI } from \"constants/API\";\nimport ROUTES from \"constants/ROUTES\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { EnterRoomFn, RoomItemData, RoomPartProps } from \"../../components/types\";\n\n\n\nconst useRoomPart = () => {\n  const history = useHistory();\n  const fetched = useQueryRooms();\n\n  const handleCreateRoom = useCallback(() => {\n    history.push(ROUTES.createRoom);\n  }, [history]);\n\n  const handleEnterRoom: EnterRoomFn = useCallback((roomId) => () => {\n    const URI = \n    history.push(ROUTES.room, );\n  }, []);\n\n  const roomListData: RoomItemData[] = useMemo(() => (\n    fetched.responseData.map(r => ({\n      // --todo--要把資料庫的players改掉\n      room: r,\n      playersAmount: r.users.length,\n    }))\n  ), [fetched.responseData]);\n\n  return ({\n    ...fetched,\n    handleEnterRoom,\n    handleCreateRoom,\n    roomListData,\n  });\n};\n\nexport default useRoomPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useFetch.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/setObjPropertyByKeysAndValue.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/regExps.ts",["257"],"\nexport const replaceRouterParamsRegExp = /\\:.*/g;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayArea.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeItem.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/CTAButton.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateRoomPart.ts",["258"],{"ruleId":"259","severity":1,"message":"260","line":2,"column":41,"nodeType":"261","messageId":"262","endLine":2,"endColumn":48},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"259","severity":1,"message":"267","line":2,"column":15,"nodeType":"261","messageId":"262","endLine":2,"endColumn":21},{"ruleId":"263","replacedBy":"268"},{"ruleId":"265","replacedBy":"269"},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"259","severity":1,"message":"271","line":2,"column":41,"nodeType":"261","messageId":"262","endLine":2,"endColumn":51},{"ruleId":"259","severity":1,"message":"272","line":3,"column":10,"nodeType":"261","messageId":"262","endLine":3,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":28,"column":6,"nodeType":"275","endLine":28,"endColumn":8,"suggestions":"276"},{"ruleId":"263","replacedBy":"277"},{"ruleId":"265","replacedBy":"278"},{"ruleId":"263","replacedBy":"279"},{"ruleId":"265","replacedBy":"280"},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"259","severity":1,"message":"281","line":1,"column":32,"nodeType":"261","messageId":"262","endLine":1,"endColumn":59},{"ruleId":"259","severity":1,"message":"282","line":7,"column":24,"nodeType":"261","messageId":"262","endLine":7,"endColumn":36},{"ruleId":"259","severity":1,"message":"283","line":27,"column":7,"nodeType":"261","messageId":"262","endLine":27,"endColumn":24},{"ruleId":"273","severity":1,"message":"284","line":49,"column":6,"nodeType":"275","endLine":49,"endColumn":8,"suggestions":"285"},{"ruleId":"259","severity":1,"message":"286","line":2,"column":39,"nodeType":"261","messageId":"262","endLine":2,"endColumn":49},{"ruleId":"259","severity":1,"message":"287","line":3,"column":10,"nodeType":"261","messageId":"262","endLine":3,"endColumn":21},{"ruleId":"259","severity":1,"message":"288","line":6,"column":10,"nodeType":"261","messageId":"262","endLine":6,"endColumn":18},{"ruleId":"273","severity":1,"message":"289","line":30,"column":6,"nodeType":"275","endLine":30,"endColumn":36,"suggestions":"290"},{"ruleId":"273","severity":1,"message":"291","line":30,"column":15,"nodeType":"292","endLine":30,"endColumn":35},{"ruleId":"259","severity":1,"message":"281","line":1,"column":32,"nodeType":"261","messageId":"262","endLine":1,"endColumn":59},{"ruleId":"259","severity":1,"message":"287","line":5,"column":27,"nodeType":"261","messageId":"262","endLine":5,"endColumn":38},{"ruleId":"259","severity":1,"message":"293","line":11,"column":10,"nodeType":"261","messageId":"262","endLine":11,"endColumn":14},{"ruleId":"273","severity":1,"message":"294","line":125,"column":6,"nodeType":"275","endLine":125,"endColumn":16,"suggestions":"295"},{"ruleId":"273","severity":1,"message":"296","line":137,"column":6,"nodeType":"275","endLine":137,"endColumn":15,"suggestions":"297"},{"ruleId":"273","severity":1,"message":"298","line":142,"column":6,"nodeType":"275","endLine":142,"endColumn":8,"suggestions":"299"},{"ruleId":"259","severity":1,"message":"271","line":2,"column":15,"nodeType":"261","messageId":"262","endLine":2,"endColumn":25},{"ruleId":"259","severity":1,"message":"300","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":25},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"273","severity":1,"message":"301","line":16,"column":6,"nodeType":"275","endLine":16,"endColumn":8,"suggestions":"302"},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"259","severity":1,"message":"303","line":1,"column":17,"nodeType":"261","messageId":"262","endLine":1,"endColumn":28},{"ruleId":"259","severity":1,"message":"270","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":13},{"ruleId":"259","severity":1,"message":"304","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":20},{"ruleId":"259","severity":1,"message":"305","line":4,"column":22,"nodeType":"261","messageId":"262","endLine":4,"endColumn":31},{"ruleId":"259","severity":1,"message":"306","line":4,"column":33,"nodeType":"261","messageId":"262","endLine":4,"endColumn":46},{"ruleId":"259","severity":1,"message":"307","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":17},{"ruleId":"259","severity":1,"message":"308","line":6,"column":8,"nodeType":"261","messageId":"262","endLine":6,"endColumn":14},{"ruleId":"259","severity":1,"message":"309","line":6,"column":18,"nodeType":"261","messageId":"262","endLine":6,"endColumn":30},{"ruleId":"259","severity":1,"message":"282","line":7,"column":24,"nodeType":"261","messageId":"262","endLine":7,"endColumn":36},{"ruleId":"259","severity":1,"message":"310","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":24},{"ruleId":"259","severity":1,"message":"311","line":4,"column":8,"nodeType":"261","messageId":"262","endLine":4,"endColumn":16},{"ruleId":"259","severity":1,"message":"312","line":5,"column":23,"nodeType":"261","messageId":"262","endLine":5,"endColumn":32},{"ruleId":"259","severity":1,"message":"313","line":7,"column":37,"nodeType":"261","messageId":"262","endLine":7,"endColumn":50},{"ruleId":"259","severity":1,"message":"314","line":20,"column":11,"nodeType":"261","messageId":"262","endLine":20,"endColumn":14},{"ruleId":"273","severity":1,"message":"298","line":22,"column":6,"nodeType":"275","endLine":22,"endColumn":8,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":2,"column":43,"nodeType":"318","messageId":"319","endLine":2,"endColumn":44,"suggestions":"320"},{"ruleId":"273","severity":1,"message":"321","line":49,"column":6,"nodeType":"275","endLine":49,"endColumn":28,"suggestions":"322"},"@typescript-eslint/no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["323"],"no-negated-in-lhs",["324"],"'Button' is defined but never used.",["323"],["324"],"'Box' is defined but never used.","'Typography' is defined but never used.","'PlayedResultPayload' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'history' and 'onBack'. Either include them or remove the dependency array. If 'onBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["325"],["323"],["324"],["323"],["324"],"'SetGamePlayingStatusPayload' is defined but never used.","'initItoState' is defined but never used.","'gamePlayingStatus' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'handleToggle'. Either include it or remove the dependency array.",["326"],"'GameStatus' is defined but never used.","'GAME_STATUS' is defined but never used.","'ItoState' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["327"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'send' is defined but never used.","React Hook useCallback has a missing dependency: 'handleSetResultOpen'. Either include it or remove the dependency array.",["328"],"React Hook useCallback has a missing dependency: 'setConfirmed'. Either include it or remove the dependency array.",["329"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["330"],"'combineReducers' is defined but never used.","React Hook useEffect has a missing dependency: 'fetched'. Either include it or remove the dependency array.",["331"],"'useCallback' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'ItoSocket' is defined but never used.","'ROUTES' is defined but never used.","'RouterParams' is defined but never used.","'QUERY_ROOM_URI' is defined but never used.","'useFetch' is defined but never used.","'useEffect' is defined but never used.","'RoomPartProps' is defined but never used.","'URI' is assigned a value but never used.",["332"],"no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["333","334"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["335"],"no-global-assign","no-unsafe-negation",{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"346","fix":"350"},{"messageId":"351","fix":"352","desc":"353"},{"messageId":"354","fix":"355","desc":"356"},{"desc":"357","fix":"358"},"Update the dependencies array to be: [history, onBack]",{"range":"359","text":"360"},"Update the dependencies array to be: [handleToggle]",{"range":"361","text":"362"},"Update the dependencies array to be: [roomId, user]",{"range":"363","text":"364"},"Update the dependencies array to be: [dispatch, handleSetResultOpen]",{"range":"365","text":"366"},"Update the dependencies array to be: [setConfirmed, user.id]",{"range":"367","text":"368"},"Update the dependencies array to be: [history]",{"range":"369","text":"370"},"Update the dependencies array to be: [fetched]",{"range":"371","text":"372"},{"range":"373","text":"370"},"removeEscape",{"range":"374","text":"375"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"376","text":"377"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [fetched.responseData, history]",{"range":"378","text":"379"},[624,626],"[history, onBack]",[1748,1750],"[handleToggle]",[625,655],"[roomId, user]",[3637,3647],"[dispatch, handleSetResultOpen]",[4064,4073],"[setConfirmed, user.id]",[4193,4195],"[history]",[460,462],"[fetched]",[707,709],[43,44],"",[43,43],"\\",[1214,1236],"[fetched.responseData, history]"]