[{"/Users/PenguinCho/Desktop/ito-online/frontend/src/App.tsx":"1","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomPart.tsx":"2","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateRoomPart.tsx":"3","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/Header.tsx":"4","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayedResult.tsx":"5","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/BackButton.tsx":"6","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInput.ts":"7","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomItem.tsx":"8","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/GameoverResult.tsx":"9","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/fetchDataByAPI.ts":"10","/Users/PenguinCho/Desktop/ito-online/frontend/src/config.ts":"11","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/makeGamePlayingPayload.ts":"12","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/WaitingRoomPart.tsx":"13","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerList.tsx":"14","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyStandBy.tsx":"15","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/useWaitingRoomPart.ts":"16","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/itoSocket.ts":"17","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useEnterSocketRoom.ts":"18","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/functions/usePlayingPart.ts":"19","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/FailSuccessResult.tsx":"20","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ContinuedResult.tsx":"21","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useToggle.ts":"22","/Users/PenguinCho/Desktop/ito-online/frontend/src/index.tsx":"23","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/context.ts":"24","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/RoomPartContainer.tsx":"25","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/WaitingRoomPartContainer.tsx":"26","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayingPart.tsx":"27","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ThemeQuestion.tsx":"28","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeList.tsx":"29","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyButton.tsx":"30","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomList.tsx":"31","/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRoom.ts":"32","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/API.ts":"33","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/ROUTES.ts":"34","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateRoomPartContainer.tsx":"35","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/HeaderContainer.tsx":"36","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/PlayingPartContainer.tsx":"37","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/functions/useRoomPart.ts":"38","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useFetch.ts":"39","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/setObjPropertyByKeysAndValue.ts":"40","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/regExps.ts":"41","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayArea.tsx":"42","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeItem.tsx":"43","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/CTAButton.tsx":"44","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateRoomPart.ts":"45","/Users/PenguinCho/Desktop/ito-online/frontend/src/reducers/index.ts":"46","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerItem.tsx":"47","/Users/PenguinCho/Desktop/ito-online/frontend/src/actions/index.ts":"48","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PassedRoundsInfo.tsx":"49","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/roomResolvers.ts":"50","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/checkIsRoomsPage.ts":"51","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/SettingButton.tsx":"52","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/ButtonInHeader.tsx":"53","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/HintButton.tsx":"54","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/functions/useHeader.ts":"55","/Users/PenguinCho/Desktop/ito-online/frontend/src/static/gameManual.ts":"56","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/wrappers/ModalWrapper.tsx":"57","/Users/PenguinCho/Desktop/ito-online/frontend/src/reportWebVitals.ts":"58","/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRooms.ts":"59","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useCheckIsRoomPage.ts":"60","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateQuestionPartContainer.tsx":"61","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateQuestionPart.tsx":"62","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInputValues.ts":"63","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateQuestionPart.ts":"64","/Users/PenguinCho/Desktop/ito-online/frontend/src/locale/locale.ts":"65","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/intl/IntlFormattedMessage.tsx":"66","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/SettingPart/component/GameManual.tsx":"67","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/SettingPart/containers/functions/useQuestionList.ts":"68","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/wrappers/ToggleDisplayWrapper.tsx":"69","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/SettingPart/component/QuestionList.tsx":"70","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/others/LoadingAndError.tsx":"71","/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryQuestions.ts":"72"},{"size":2266,"mtime":1612972838881,"results":"73","hashOfConfig":"74"},{"size":1164,"mtime":1612973793059,"results":"75","hashOfConfig":"74"},{"size":953,"mtime":1612974046030,"results":"76","hashOfConfig":"74"},{"size":1842,"mtime":1612948512054,"results":"77","hashOfConfig":"74"},{"size":1840,"mtime":1612802893539,"results":"78","hashOfConfig":"74"},{"size":1055,"mtime":1612957262076,"results":"79","hashOfConfig":"74"},{"size":752,"mtime":1612146922977,"results":"80","hashOfConfig":"74"},{"size":1223,"mtime":1612957233350,"results":"81","hashOfConfig":"74"},{"size":687,"mtime":1613020992860,"results":"82","hashOfConfig":"74"},{"size":973,"mtime":1612949757772,"results":"83","hashOfConfig":"74"},{"size":1232,"mtime":1612692706783,"results":"84","hashOfConfig":"74"},{"size":1644,"mtime":1612956466033,"results":"85","hashOfConfig":"74"},{"size":645,"mtime":1612161310720,"results":"86","hashOfConfig":"74"},{"size":397,"mtime":1612160971799,"results":"87","hashOfConfig":"74"},{"size":463,"mtime":1612158902578,"results":"88","hashOfConfig":"74"},{"size":4048,"mtime":1612511331630,"results":"89","hashOfConfig":"74"},{"size":4557,"mtime":1612692801150,"results":"90","hashOfConfig":"74"},{"size":706,"mtime":1612506924581,"results":"91","hashOfConfig":"74"},{"size":5811,"mtime":1613149717434,"results":"92","hashOfConfig":"74"},{"size":1509,"mtime":1613149188517,"results":"93","hashOfConfig":"74"},{"size":1529,"mtime":1613150054229,"results":"94","hashOfConfig":"74"},{"size":563,"mtime":1612516790781,"results":"95","hashOfConfig":"74"},{"size":728,"mtime":1612320718476,"results":"96","hashOfConfig":"74"},{"size":1044,"mtime":1612401881293,"results":"97","hashOfConfig":"74"},{"size":566,"mtime":1612925056078,"results":"98","hashOfConfig":"74"},{"size":1615,"mtime":1612337438708,"results":"99","hashOfConfig":"74"},{"size":545,"mtime":1612171701920,"results":"100","hashOfConfig":"74"},{"size":870,"mtime":1613024719246,"results":"101","hashOfConfig":"74"},{"size":763,"mtime":1612401881291,"results":"102","hashOfConfig":"74"},{"size":359,"mtime":1612236838473,"results":"103","hashOfConfig":"74"},{"size":683,"mtime":1612973877661,"results":"104","hashOfConfig":"74"},{"size":564,"mtime":1612232566938,"results":"105","hashOfConfig":"74"},{"size":398,"mtime":1613035736439,"results":"106","hashOfConfig":"74"},{"size":277,"mtime":1612325606515,"results":"107","hashOfConfig":"74"},{"size":504,"mtime":1612146922973,"results":"108","hashOfConfig":"74"},{"size":662,"mtime":1612803034422,"results":"109","hashOfConfig":"74"},{"size":577,"mtime":1612330751779,"results":"110","hashOfConfig":"74"},{"size":1200,"mtime":1612925044914,"results":"111","hashOfConfig":"74"},{"size":1398,"mtime":1612320718477,"results":"112","hashOfConfig":"74"},{"size":599,"mtime":1612489376895,"results":"113","hashOfConfig":"74"},{"size":50,"mtime":1612232566945,"results":"114","hashOfConfig":"74"},{"size":1349,"mtime":1613019606659,"results":"115","hashOfConfig":"74"},{"size":487,"mtime":1612162539623,"results":"116","hashOfConfig":"74"},{"size":592,"mtime":1612401881290,"results":"117","hashOfConfig":"74"},{"size":1351,"mtime":1612320718471,"results":"118","hashOfConfig":"74"},{"size":1101,"mtime":1612489376896,"results":"119","hashOfConfig":"74"},{"size":589,"mtime":1612160037631,"results":"120","hashOfConfig":"74"},{"size":1532,"mtime":1612489376888,"results":"121","hashOfConfig":"74"},{"size":570,"mtime":1613021377880,"results":"122","hashOfConfig":"74"},{"size":1734,"mtime":1612320718473,"results":"123","hashOfConfig":"74"},{"size":230,"mtime":1612765145930,"results":"124","hashOfConfig":"74"},{"size":430,"mtime":1612801522277,"results":"125","hashOfConfig":"74"},{"size":652,"mtime":1612801715991,"results":"126","hashOfConfig":"74"},{"size":459,"mtime":1612801624617,"results":"127","hashOfConfig":"74"},{"size":553,"mtime":1612802609043,"results":"128","hashOfConfig":"74"},{"size":2250,"mtime":1612957660093,"results":"129","hashOfConfig":"74"},{"size":1132,"mtime":1612877678434,"results":"130","hashOfConfig":"74"},{"size":425,"mtime":1611805524552,"results":"131","hashOfConfig":"74"},{"size":498,"mtime":1612152307204,"results":"132","hashOfConfig":"74"},{"size":306,"mtime":1612765096266,"results":"133","hashOfConfig":"74"},{"size":851,"mtime":1613037359130,"results":"134","hashOfConfig":"74"},{"size":3615,"mtime":1613037556425,"results":"135","hashOfConfig":"74"},{"size":1046,"mtime":1612949558934,"results":"136","hashOfConfig":"74"},{"size":1935,"mtime":1613037337124,"results":"137","hashOfConfig":"74"},{"size":974,"mtime":1612973384586,"results":"138","hashOfConfig":"74"},{"size":1201,"mtime":1612973452595,"results":"139","hashOfConfig":"74"},{"size":787,"mtime":1612803002395,"results":"140","hashOfConfig":"74"},{"size":248,"mtime":1613036578779,"results":"141","hashOfConfig":"74"},{"size":501,"mtime":1613037270468,"results":"142","hashOfConfig":"74"},{"size":868,"mtime":1613037583069,"results":"143","hashOfConfig":"74"},{"size":518,"mtime":1613036719801,"results":"144","hashOfConfig":"74"},{"size":520,"mtime":1613035787715,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"sell2s",{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"156"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"152"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"152"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"152"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"148"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"160"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"152"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"148"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"156"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"152"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"152"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"148"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"148"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"160"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"152"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/PenguinCho/Desktop/ito-online/frontend/src/App.tsx",[],["326","327"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomPart.tsx",["328","329"],"import React from 'react';\nimport { Box, Button, CircularProgress, Divider } from '@material-ui/core';\nimport RoomList from './RoomList';\nimport { RoomPartProps } from './types';\nimport CTAButton from 'components/ito/Common/components/CTAButton';\nimport IntlFormattedMessage from 'components/ito/Common/components/intl/IntlFormattedMessage';\n\nconst RoomPart = (props: RoomPartProps) => {\n  return (\n    <Box\n      textAlign={'center'}\n    >\n      {props.loading ? (\n        <CircularProgress />\n      ) : (\n        <RoomList {...props} />\n      )}\n      {/* <Box paddingY={1}>\n        <Divider />\n      </Box> */}\n      <CTAButton \n        color={'primary'} \n        variant={'outlined'}\n        fullWidth={true}\n        onClick={props.onCreateRoom}\n      >\n        <IntlFormattedMessage\n          langKey={'roomPart.createNewRoom'}\n        />\n      </CTAButton>\n      <CTAButton \n        color={'primary'} \n        variant={'outlined'}\n        fullWidth={true}\n        onClick={props.onCreateQuestion}\n      >\n        <IntlFormattedMessage\n          langKey={'roomPart.createNewQuestion'}\n        />\n      </CTAButton>\n    </Box>\n  );\n};\n\nexport default RoomPart;",["330","331"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateRoomPart.tsx",["332"],"import React from 'react';\nimport { Box, Button, Divider, TextField } from '@material-ui/core';\nimport { CreateRoomPartProps } from './types';\nimport CTAButton from 'components/ito/Common/components/CTAButton';\nimport { useIntl } from 'react-intl';\n\nconst CreateRoomPart = (props: CreateRoomPartProps) => {\n  const { messages, } = useIntl();\n\n  return (\n    <Box\n      textAlign={'center'}\n    >\n      <TextField\n        value={props.value}\n        variant={'outlined'}\n        placeholder={messages['createRoomPart.roomNameInput.placeholder'] as any}\n        onChange={props.onChange}\n      />\n      <Box paddingY={1}>\n        <Divider />\n      </Box>\n      <CTAButton\n        disabled={props.loading}\n        onClick={props.onCreateRoom}\n      >\n        {props.loading ? \n          messages['createRoomPart.creating'] : \n          messages['createRoomPart.confirmCreate']\n        }\n      </CTAButton>\n    </Box>\n  );\n};\n\nexport default CreateRoomPart;",["333","334"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/Header.tsx",["335"],"import React from 'react';\nimport { Box, Divider, Grid, makeStyles, Typography } from '@material-ui/core';\nimport BackButton, { BackButtonProps } from './BackButton';\nimport { SingleUser } from 'common-types';\nimport useCheckIsRoomPage from 'lib/custom-hooks/useCheckIsRoomPage';\nimport SettingButton, { SettingButtonProps } from './SettingButton';\nimport HintButton, { HintButtonProps } from './HintButton';\n\nexport interface HeaderProps extends BackButtonProps, SettingButtonProps, HintButtonProps {\n  user: SingleUser\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n     \n  },\n  backBTN: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n  },\n  hintBTN: {\n    position: 'absolute',\n    top: 0,\n    right: 40,\n    height: '100%',\n  },\n  settingBTN: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    height: '100%',\n  },\n  userInfo: {\n    textAlign: 'center',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  },\n}));\n\nconst Header = (props: HeaderProps) => {\n  const {\n    user,\n  } = props;\n  const classes = useStyles();\n  const { isRoomPage, } = useCheckIsRoomPage();\n\n  return (\n    <Box paddingBottom={2}>\n      <Box position={'relative'}>\n        <Box className={classes.backBTN}>\n          {!isRoomPage && (\n            <BackButton {...props} />\n          )}\n        </Box>\n        <Box textAlign={'center'}>\n          <Typography variant={'h4'}>\n            {'Ito Online'}\n          </Typography>\n        </Box>\n        <Box className={classes.hintBTN}>\n          <HintButton {...props} />\n        </Box>\n        <Box className={classes.settingBTN}>\n          <SettingButton {...props} />\n        </Box>\n      </Box>\n      <Divider />\n      <Box className={classes.userInfo}>\n        {`Id: ${user.id} / `}\n        {`Name: ${user.name}`}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Header;",["336","337"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayedResult.tsx",["338","339","340","341","342","343"],"import React from 'react';\nimport { Box, makeStyles, Modal, Paper, Typography } from '@material-ui/core';\nimport { PlayedResultPayload, PlayedResultProps } from './types';\nimport FailSuccessResult from './FailSuccessResult';\nimport ContinuedResult from './ContinuedResult';\nimport GameoverResult from './GameoverResult';\nimport ModalWrapper from 'components/ito/Common/components/wrappers/ModalWrapper';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  content: {\n    backgroundColor: '#fff',\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    \n  }\n}));\n\nexport const getModalResult = (props: PlayedResultProps) => {\n  const { resultPayload } = props;\n\n  if(resultPayload) {\n    switch (resultPayload.resultType) {\n      case 'CONTINUED':\n      case 'CONTINUED_FAILED':\n        return (\n          <ContinuedResult \n            {...props}\n            isContinuedFailed={resultPayload.resultType === 'CONTINUED_FAILED'}\n            passedRounds={resultPayload.passedRounds}\n          />\n        );\n      case 'GAME_OVER':\n        return (\n          <GameoverResult \n            {...props} \n            passedRounds={resultPayload.passedRounds}\n          />\n        );\n      default:\n        return (\n          <FailSuccessResult \n            {...resultPayload}\n            onConfirmResult={props.onCloseResult}\n          />\n        );\n    }\n  }\n  return null;\n};\n\nconst PlayedResult = (props: PlayedResultProps) => {\n  const {\n    isResultOpen,\n    resultPayload,\n    onCloseResult,\n  } = props;\n  const classes = useStyles();\n\n  if(!resultPayload) {\n    return null;\n  }\n\n  return (\n    <ModalWrapper open={isResultOpen} onClose={onCloseResult}>\n      {getModalResult(props)}\n    </ModalWrapper>\n  );\n};\n\nexport default PlayedResult;",["344","345"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/BackButton.tsx",["346"],"import React, { useCallback } from 'react';\nimport { Box, makeStyles } from '@material-ui/core';\nimport { ArrowLeftOutlined } from '@material-ui/icons';\nimport { Callback } from 'common-types';\nimport { useHistory } from 'react-router';\nimport ROUTES from 'constants/ROUTES';\n\nexport interface BackButtonProps {\n  onBack?: Callback\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 42,\n    height: 42,\n    borderRadius: 10000,\n    cursor: 'pointer',\n    textAlign: 'center',\n    '&:hover': {\n      backgroundColor: '#ddd',\n    }\n  }\n}));\n\nconst BackButton = ({\n  onBack,\n}: BackButtonProps) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  // console.log(history);\n  const handleBack = useCallback(() => {\n    if(history.action === 'POP') {\n      history.push(ROUTES.homepage);\n    } else {\n      history.goBack();\n    }\n    onBack && onBack();\n  }, []);\n  \n  return (\n    <Box className={classes.root} onClick={handleBack}>\n      <ArrowLeftOutlined fontSize={'large'} />\n    </Box>\n  );\n};\n\nexport default BackButton;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInput.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomItem.tsx",["347"],"import React from 'react';\nimport { Box, ListItem, makeStyles, Typography } from '@material-ui/core';\nimport { RoomItemProps } from './types';\nimport { AccountCircle } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport ROUTES from 'constants/ROUTES';\nimport { replaceRouterParamsRegExp } from 'constants/regExps';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textDecoration: 'none',\n    color: '#111',\n  }\n}));\n\nconst RoomItem = (props: RoomItemProps) => {\n  const classes = useStyles();\n  const linkTo = ROUTES.room.replace(replaceRouterParamsRegExp, props.room.id);\n  \n  return (\n    <Link className={classes.root} to={linkTo}>\n      <ListItem button divider>\n        <Box\n          width={'100%'}\n          display={'flex'}\n          justifyContent={'space-between'}\n        >\n          <Box>\n            <Typography variant={'h5'}>\n              {props.room.name || props.room.id}\n            </Typography>\n          </Box>\n          {/* <Box>\n            <AccountCircle fontSize={'large'} />\n            <Box component={'span'}>\n              {props.playersAmount}\n            </Box>\n          </Box> */}\n        </Box>\n      </ListItem>\n    </Link>\n  );\n};\n\nexport default RoomItem;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/GameoverResult.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/fetchDataByAPI.ts",["348"],"export interface FetchDataByAPIOptions<DefaultRes> {\n  uri: string\n  requestInit?: RequestInit\n  defaultRes: DefaultRes\n  isPostMethod?: boolean\n  postForm?: Record<string, string>\n}\n\nexport const getFetchPostInit = (isPostMethod=false, postForm={}) => {\n  return isPostMethod ? {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(postForm)\n  } : {};\n};\n\nasync function fetchDataByAPI<DefaultRes>({\n  uri, \n  defaultRes,\n  requestInit,\n  isPostMethod,\n  postForm,\n}: FetchDataByAPIOptions<DefaultRes>) {\n  try {\n    const fetchPostInit: RequestInit = getFetchPostInit(isPostMethod, postForm);\n\n    const res = await fetch(uri, {\n      mode: 'cors',\n      ...fetchPostInit,\n      ...requestInit,\n    });\n    console.log(fetchPostInit);\n    const res_1 = await res.json();\n    return res_1;\n  } catch (rej) {\n    console.log(rej);\n    throw new Error(rej);\n    return defaultRes;\n  }\n}\n\nexport default fetchDataByAPI;","/Users/PenguinCho/Desktop/ito-online/frontend/src/config.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/makeGamePlayingPayload.ts",[],["349","350"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/WaitingRoomPart.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerList.tsx",["351"],"import React from 'react';\nimport { Box, List } from '@material-ui/core';\nimport { PlayerListProps } from './types';\nimport PlayerItem from './PlayerItem';\n\nconst PlayerList = (props: PlayerListProps) => {\n  return (\n    <List>\n      {props.playerListData.map((p, i) => (\n        <PlayerItem\n          key={i}\n          {...p}\n        />\n      ))}\n    </List>\n  );\n};\n\nexport default PlayerList;  ","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyStandBy.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/useWaitingRoomPart.ts",["352","353","354","355"],"import { setGamePlayingStatus, SetGamePlayingStatusPayload } from \"actions\";\nimport useQueryRoom from \"api/custom-hooks/useQueryRoom\";\nimport { socket } from \"App\";\nimport { GamePlayingStatusFromSocketPayload, SingleRoom, SingleUser } from \"common-types\";\nimport { PlayerItemProps } from \"components/ito/RoomPart/components/WaitingRoom/types\";\nimport { SOCKET_EVENT, USER_ACTION } from \"config\";\nimport ContextStore, { initItoState } from \"constants/context\";\nimport ItoSocket, { AddPlayerPayload, PlayerUpdateReadyPayload, RemovePlayerPayload, UpdateAllPlayersPayload } from \"constants/itoSocket\";\nimport ROUTES, { RouterParams } from \"constants/ROUTES\";\nimport useEnterSocketRoom from \"lib/custom-hooks/useEnterSocketRoom\";\nimport useToggle from \"lib/custom-hooks/useToggle\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport makeGamePlayingPayload from \"./makeGamePlayingPayload\";\nimport roomResolvers from \"./roomResolvers\";\n\nexport interface UseWaitingRoomPartOptions {\n  setGamePlayingStatusToCtx: typeof setGamePlayingStatus\n}\n\nconst useWaitingRoomPart = ({\n  setGamePlayingStatusToCtx,\n}: UseWaitingRoomPartOptions) => {\n  const {\n    state: {\n      user,\n      gamePlayingStatus,\n    }\n  } = useContext(ContextStore);\n\n  const {\n    roomId,\n  } = useParams<RouterParams>();\n  const history = useHistory();\n  useEnterSocketRoom({\n    user, roomId,\n  });\n\n  const {\n    toggle: isReady,\n    handleToggle,\n  } = useToggle(false);\n  const queried = useQueryRoom({ roomId, });\n  const [room, setRoom] = useState<SingleRoom>();\n  const [users, setUsers] = useState<SingleUser[]>([]);\n\n  const handleSetReady = useCallback(() => {\n    handleToggle();\n  }, []);\n\n  const handleUpdateRoomPlayerReady = useCallback((payload: PlayerUpdateReadyPayload) => {\n    setRoom(_room => (\n      roomResolvers.udpateRoomUser({ room: _room, }, payload)\n    ));\n  }, []);\n  const handleUpdateAllPlayers = useCallback((payload: UpdateAllPlayersPayload) => {\n    setUsers(payload.users);\n  }, []);\n  const handleAddPalyerToRoom = useCallback((payload: AddPlayerPayload) => {\n    setRoom(_room => (\n      roomResolvers.addPlayer({ room: _room, }, payload)\n    ));\n  }, []);\n  const handleRemovePlayerFromRoom = useCallback((payload: RemovePlayerPayload) => {\n    setUsers(users => (\n      roomResolvers.removePlayer({ users, }, payload)\n    ));\n  }, []);\n  const handleGameStart = useCallback((payload: GamePlayingStatusFromSocketPayload) => {\n    console.log(payload);\n    // 轉為user自己的\n    const ctxPayload = makeGamePlayingPayload({\n      user,\n      roomId,\n      payloadFromSocket: payload,\n    });\n\n    setGamePlayingStatusToCtx(ctxPayload as any);\n    history.push(ROUTES.playing);\n  }, [history, roomId, setGamePlayingStatusToCtx, user]);\n\n  useEffect(() => {\n    // 取得房間最新狀態\n    const listener = ItoSocket.onListenGameStatus({\n      onUpdateAllPlayers: handleUpdateAllPlayers,\n      onUpdatePlayerReady: handleUpdateRoomPlayerReady,\n      onAddPlayer: handleAddPalyerToRoom,\n      onRemovePlayer: handleRemovePlayerFromRoom,\n      onGameStart: handleGameStart,\n    });\n    return () => {\n      listener();\n    };\n  }, [handleAddPalyerToRoom, handleGameStart, handleRemovePlayerFromRoom, handleUpdateAllPlayers, handleUpdateRoomPlayerReady]);\n\n  useEffect(() => {\n    ItoSocket.sendUserReady({\n      userId: user.id,\n      isReady,\n    });\n  }, [isReady, user.id]);\n\n  useEffect(() => {\n    if(queried.room) {\n      setRoom(queried.room);\n      socket.emit(SOCKET_EVENT.USER_ACTION, {\n        userActionType: USER_ACTION.GET_ALL_PLAYERS_READY\n      });\n    }\n  }, [queried.room]);\n\n  const playerListData: PlayerItemProps[] = useMemo(() => (\n    users.map(p => ({\n      ...p,\n      isReady: !!(p.isReady),\n      isMe: p.id === user.id,\n      playerName: p.name || p.id,\n    }))\n  ), [users, user.id]);\n\n  return ({\n    isReady,\n    loading: false,\n    room,\n    playerListData,\n    handleSetReady,\n  });\n};\n\nexport default useWaitingRoomPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/itoSocket.ts",["356","357","358"],"\nimport { Callback, GamePlayingStatus, GameStatus, GameStatusKeys, ComparedPlayedResult, SingleUser, GamePlayingStatusFromSocketPayload, PlayedResultType } from 'common-types';\nimport { GAME_STATUS, SOCKET_EVENT, USER_ACTION, GameStatusTypes } from 'config';\nimport { io } from 'socket.io-client';\nimport { API_URI } from './API';\nimport { ItoState } from './context';\n\nexport const socket = io(API_URI);\n\nexport interface UserReadyPayload {\n  userId: string\n  isReady: boolean\n}\nexport interface UserJoinRoomPayload {\n  roomId: string\n  user: SingleUser\n}\nexport interface UserLeaveRoomPayload {\n  roomId: string\n  userId: string\n}\nexport interface UserPlayCardPayload {\n  userId: string\n  cardNumber: GamePlayingStatus['myCardNow']\n}\n\nexport interface BasicGameStatusPayload {\n  gameStatus: GameStatusKeys\n}\nexport interface PlayerUpdateReadyPayload {\n  gameStatus: GameStatusTypes.UPDATE_READY\n  userId: string\n  isReady: boolean\n}\nexport interface UpdateAllPlayersPayload {\n  gameStatus: GameStatusTypes.UPDATE_ALL_USERS\n  users: SingleUser[]\n}\nexport interface AddPlayerPayload {\n  gameStatus: GameStatusTypes.ADD_PLAYER\n  user: SingleUser\n}\nexport interface RemovePlayerPayload {\n  gameStatus: GameStatusTypes.REMOVE_PLAYER\n  userId: string\n}\nexport type GameStartPayload = GamePlayingStatusFromSocketPayload\nexport interface UpdatePlayedResultPayload {\n  gameStatus: GameStatusTypes.SET_PLAYED_RESULT\n  resultType: PlayedResultType\n  passedRounds: number\n  playedResult?: ComparedPlayedResult\n}\nexport interface GameContinuedFailedPayload {\n  gameStatus: GameStatusTypes.SET_CONTINUE_GAME_FAIL\n}\n\nexport type GameStatusPayload = \n  PlayerUpdateReadyPayload |\n  UpdateAllPlayersPayload |\n  AddPlayerPayload | \n  RemovePlayerPayload |\n  GameStartPayload |\n  UpdatePlayedResultPayload |\n  GameContinuedFailedPayload\n\nconst ItoSocket = {\n  onListenGameStatus({\n    onAddPlayer, onRemovePlayer, onUpdatePlayerReady, onUpdateAllPlayers, onGameStart, onGetComparedResult, onGameContinuedFailed\n  }: {\n    onRemovePlayer?: Callback\n    onAddPlayer?: Callback\n    onUpdatePlayerReady?: Callback\n    onUpdateAllPlayers?: Callback\n    onGameStart?: (payload: GameStartPayload) => any\n    onGameContinuedFailed?: Callback\n    onGetComparedResult?: (payload: UpdatePlayedResultPayload) => any\n  }) {\n    socket.on(SOCKET_EVENT.GAME_STATUS, (payload: GameStatusPayload) => {\n      console.log(payload);\n      if(payload) {\n        switch (payload.gameStatus) {\n          case GameStatusTypes.UPDATE_ALL_USERS:\n            return onUpdateAllPlayers && onUpdateAllPlayers(payload);\n          case GameStatusTypes.ADD_PLAYER:\n            return onAddPlayer && onAddPlayer(payload);\n          case GameStatusTypes.UPDATE_READY:\n            return onUpdatePlayerReady && onUpdatePlayerReady(payload);\n          case GameStatusTypes.REMOVE_PLAYER:\n            return onRemovePlayer && onRemovePlayer(payload);\n          case GameStatusTypes.START: {\n            return onGameStart && onGameStart(payload);\n          }\n          case GameStatusTypes.SET_PLAYED_RESULT:\n            return onGetComparedResult && onGetComparedResult(payload);\n          case GameStatusTypes.SET_CONTINUE_GAME_FAIL:\n            return onGameContinuedFailed && onGameContinuedFailed();\n          default:\n            break;\n        }\n      }\n    });\n    \n    return () => socket.off(SOCKET_EVENT.GAME_STATUS);\n  },\n\n  sendUserAction(payload: Record<string, any>) {\n    socket.emit(SOCKET_EVENT.USER_ACTION, payload);\n  },\n\n  sendUserReady({ userId, isReady, }: UserReadyPayload) {\n    this.sendUserAction({\n      userActionType: USER_ACTION.SET_READY,\n      userId,\n      isReady,\n    });\n  },\n  sendUserJoinRoom({ roomId, user, }: UserJoinRoomPayload) {\n    socket.emit(SOCKET_EVENT.JOIN_ROOM, {\n      roomId,\n      user,\n    });\n  },\n  sendUserLeaveRoom({ roomId, userId, }: UserLeaveRoomPayload) {\n    socket.emit(SOCKET_EVENT.LEAVE_ROOM, {\n      roomId,\n      userId,\n    });\n  },\n\n  sendPlayCard({ userId, cardNumber, }: UserPlayCardPayload) {\n    if(cardNumber) {\n      socket.emit(SOCKET_EVENT.USER_ACTION, ({\n        userActionType: USER_ACTION.PLAY_CARD,\n        userId,\n        cardNumber, \n      }));\n      return true;\n    }\n    return false;\n  },\n\n  sendConfirmContinue(userId: string) {\n    socket.emit(SOCKET_EVENT.USER_ACTION, {\n      userActionType: USER_ACTION.CONFIRM_CONTINUE_GAME,\n      userId,\n    });\n  },\n  sendConfirmLeave() {\n    socket.emit(SOCKET_EVENT.USER_ACTION, {\n      userActionType: USER_ACTION.CONFIRM_LEAVE_GAME,\n    });\n  },\n};\n\nexport default ItoSocket;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useEnterSocketRoom.ts",["359","360"],"import { SingleUser } from \"common-types\";\nimport ItoSocket from \"constants/itoSocket\";\nimport { useEffect } from \"react\";\n\nexport interface UseEnterSocketRoomOptions {\n  roomId: string\n  user: SingleUser\n}\n\nconst useEnterSocketRoom = ({\n  roomId, user\n}: UseEnterSocketRoomOptions) => {\n  useEffect(() => {\n    // 加入該房間\n    if(roomId) {\n      console.log(`Enter room: ${roomId}`);\n      ItoSocket.sendUserJoinRoom({\n        user: user,\n        roomId,\n      });\n    }\n    \n    return () => {\n      console.log('leave room');\n      ItoSocket.sendUserLeaveRoom({\n        roomId,\n        userId: user.id,\n      });\n    };\n  }, [roomId, JSON.stringify(user)]);\n};\n\nexport default useEnterSocketRoom;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/functions/usePlayingPart.ts",["361","362","363","364","365","366"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/FailSuccessResult.tsx",["367"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ContinuedResult.tsx",["368","369","370"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useToggle.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/index.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/context.ts",["371"],"import { GamePlayingStatus, SingleUser } from \"common-types\";\nimport { combineReducers } from \"react-function-helpers\";\nimport { createContextStore, createContextValueFn } from 'react-function-helpers/lib/functions/contextHelpers';\nimport ContextWrapperFn from \"react-function-helpers/lib/functions/ContextWrapper\";\nimport reducers from \"reducers\";\n\nexport interface GamePlayingStatusState {\n  message: string\n  roomId: string\n  status: GamePlayingStatus | null\n}\n\nexport interface ItoState {\n  user: SingleUser\n  gamePlayingStatus: GamePlayingStatusState\n}\nconst userId = ~~(Math.random() * 100000);\nexport const initItoState: ItoState = {\n  user: {\n    id: String(userId),\n    // id: '',\n    name: 'Mock User ' + userId\n  },\n  gamePlayingStatus: {\n    message: '',\n    roomId: '',\n    status: null,\n  },\n};\n\nexport const ContextValue = createContextValueFn(initItoState, reducers);\nconst ContextStore = createContextStore(initItoState);\n\nexport default ContextStore;\nexport const ContextWrapper = ContextWrapperFn(ContextValue, ContextStore);","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/RoomPartContainer.tsx",["372"],"import React from 'react';\nimport { Box } from '@material-ui/core';\nimport RoomPart from '../components/RoomPart';\nimport useRoomPart from './functions/useRoomPart';\n\nconst RoomPartContainer = () => {\n  const roomPartState = useRoomPart();\n  \n  return (\n    <RoomPart \n      loading={roomPartState.loading}\n      roomListData={roomPartState.roomListData}\n      onEnterRoom={roomPartState.handleEnterRoom}\n      onCreateRoom={roomPartState.handleCreateRoom}\n      onCreateQuestion={roomPartState.handleCreateQuestion}\n    />\n  );\n};\n\nexport default RoomPartContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/WaitingRoomPartContainer.tsx",["373"],"import React from 'react';\nimport { Box, CircularProgress } from '@material-ui/core';\nimport WaitingRoomPart from '../../components/WaitingRoom/WaitingRoomPart';\nimport useWaitingRoomPart, { UseWaitingRoomPartOptions } from './functions/useWaitingRoomPart';\nimport { MapDispatchToProps } from 'react-function-helpers/lib/functions/mapContextToProps';\nimport { setGamePlayingStatus } from 'actions';\nimport { connectCtx } from 'react-function-helpers';\nimport ContextStore from 'constants/context';\nimport { WaitingRoomPartContainerProps } from './types';\n\nconst WaitingRoomPartContainer = (props: WaitingRoomPartContainerProps) => {\n  const {\n    isReady,\n    loading,\n    room,\n    playerListData,\n    handleSetReady,\n  } = useWaitingRoomPart(props);\n\n  if(room) {\n    return (\n      <WaitingRoomPart\n        roomName={room.name || room.id}\n        isPlayerReady={isReady}\n        playerListData={playerListData}\n        onReady={handleSetReady}\n      />\n    );\n  }\n  else if(loading) {\n    return (\n      <CircularProgress />\n    );\n  }\n  return null;\n};\n\nexport interface OwnProps {\n  \n}\ninterface Dispatches extends Pick<UseWaitingRoomPartOptions, 'setGamePlayingStatusToCtx'> {\n\n}\n\nconst mapDispatchToProps: MapDispatchToProps<OwnProps, Dispatches> = (dispatch) => {\n  return ({\n    setGamePlayingStatusToCtx: (payload) => {\n      const action = setGamePlayingStatus(payload);\n      dispatch(action);\n      return action;\n    }\n  });\n};\n\n\nconst WaitingRoomPartContainerWithCtx = connectCtx(ContextStore)(undefined, mapDispatchToProps)(WaitingRoomPartContainer);\n\nexport default WaitingRoomPartContainerWithCtx;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayingPart.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/ThemeQuestion.tsx",["374"],"import React from 'react';\nimport { Box, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { ThemeQuestionProps } from './types';\nimport IntlFormattedMessage from 'components/ito/Common/components/intl/IntlFormattedMessage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: theme.spacing(1),\n    textAlign: 'center',\n  },\n}));\n\nconst ThemeQuestion = (props: ThemeQuestionProps) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant={'h5'}>\n        {props.question}\n      </Typography>\n      <IntlFormattedMessage \n        langKey={'playingPart.playArea.supplement'}\n        values={{\n          supplement: props.supplement,\n        }}\n      />\n    </Paper>\n  );\n};\n\nexport default ThemeQuestion;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeList.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/ReadyButton.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/RoomList.tsx",["375","376"],"import React from 'react';\nimport { Box, List, Typography } from '@material-ui/core';\nimport RoomItem from './RoomItem';\nimport { RoomListProps } from './types';\nimport IntlFormattedMessage from 'components/ito/Common/components/intl/IntlFormattedMessage';\n\nconst RoomList = (props: RoomListProps) => {\n  return (\n    <List>\n      {props.roomListData.map((r, i) => (\n        <RoomItem key={i} {...r} />\n      ))}\n      {props.roomListData.length === 0 && (\n        <IntlFormattedMessage \n          variant={'h5'} color={'initial'} style={{\n            opacity: 0.3,\n          }}\n          langKey={'roomPart.noRooms'}\n        />\n      )}\n    </List>\n  );\n};\n\nexport default RoomList;","/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRoom.ts",["377"],"import { SingleRoom } from \"common-types\";\nimport { API_URI } from \"constants/API\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport { useEffect } from \"react\";\n\nconst getURI = (roomId='') => API_URI + '/room/' + roomId;\n\nconst useQueryRoom = ({ roomId }: { roomId: string}) => {\n  const fetched = useFetch<SingleRoom | undefined>({\n    apiPath: getURI(roomId),\n    initResponseData: undefined,\n  });\n\n  useEffect(() => {\n    fetched.fetchData();\n  }, []);\n\n  return ({\n    ...fetched,\n    room: fetched.responseData,\n  });\n};\n\nexport default useQueryRoom;","/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/API.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/ROUTES.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateRoomPartContainer.tsx",["378"],"import React from 'react';\nimport { Box } from '@material-ui/core';\nimport CreateRoomPart from '../components/CreateRoomPart';\nimport useCreateRoomPart from './functions/useCreateRoomPart';\n\nconst CreateRoomPartContainer = () => {\n  const {\n    value,\n    handleChangeInput,\n    handleCreateRoom,\n  } = useCreateRoomPart();\n\n  return (\n    <CreateRoomPart\n      value={value}\n      onChange={handleChangeInput}\n      onCreateRoom={handleCreateRoom}\n    />\n  );\n};\n\nexport default CreateRoomPartContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/HeaderContainer.tsx",["379","380"],"import React, { useContext } from 'react';\nimport Header from '../components/Header';\nimport ContextStore from 'constants/context';\nimport useHeader from './functions/useHeader';\nimport GameManual from 'components/ito/SettingPart/component/GameManual';\n\nconst HeaderContainer = () => {\n  const {\n    user,\n    hintToggle,\n    handleToggleHint,\n    handleToggleSetting,\n  } = useHeader();\n  \n  return (\n    <>\n      <Header \n        user={user} \n        onToggleHint={handleToggleHint }\n        onToggleSetting={handleToggleSetting} \n      />\n      <GameManual open={hintToggle} onCloseManual={handleToggleHint} />\n    </>\n  );\n};\n\nexport default HeaderContainer;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/containers/Playing/PlayingPartContainer.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/functions/useRoomPart.ts",["381","382","383","384","385","386","387"],"import useQueryRooms from \"api/custom-hooks/useQueryRooms\";\nimport { QUERY_ROOM_URI } from \"constants/API\";\nimport ROUTES from \"constants/ROUTES\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { EnterRoomFn, RoomItemData, RoomPartProps } from \"../../components/types\";\n\n\n\nconst useRoomPart = () => {\n  const history = useHistory();\n  const fetched = useQueryRooms();\n\n  const handleCreateRoom = useCallback(() => {\n    history.push(ROUTES.createRoom);\n  }, [history]);\n\n  const handleCreateQuestion = useCallback(() => {\n    history.push(ROUTES.createQuestion);\n  }, []);\n\n  const handleEnterRoom: EnterRoomFn = useCallback((roomId) => () => {\n    const URI = \n    history.push(ROUTES.room, );\n  }, []);\n\n  const roomListData: RoomItemData[] = useMemo(() => (\n    fetched.responseData.map(r => ({\n      // --todo--要把資料庫的players改掉\n      room: r,\n      playersAmount: r.users.length,\n    }))\n  ), [fetched.responseData]);\n\n  return ({\n    ...fetched,\n    handleEnterRoom,\n    handleCreateRoom,\n    handleCreateQuestion,\n    roomListData,\n  });\n};\n\nexport default useRoomPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useFetch.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/setObjPropertyByKeysAndValue.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/constants/regExps.ts",["388"],"\nexport const replaceRouterParamsRegExp = /\\:.*/g;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PlayArea.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/LifeItem.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/CTAButton.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateRoomPart.ts",["389"],"import { SingleRoom } from \"common-types\";\nimport { CREATE_ROOM_URI } from \"constants/API\";\nimport ContextStore from \"constants/context\";\nimport useFetch from \"lib/custom-hooks/useFetch\";\nimport useInput from \"lib/custom-hooks/useInput\";\nimport { useCallback, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nexport const getRandomRoomName = () => (\n  `room-${~~(Math.random() * 100000)}`\n);\n\nconst useCreateRoomPart = () => {\n  const {\n    state: {\n      user,\n    },\n  } = useContext(ContextStore);\n  const history = useHistory();\n  const {\n    value,\n    handleChangeInput,\n  } = useInput({\n    initValue: '',\n  });\n  const fetched = useFetch<SingleRoom | undefined>({\n    apiPath: CREATE_ROOM_URI,\n    initResponseData: undefined,\n    isPostMethod: true,\n  });\n\n  const handleCreateRoom = useCallback(() => {\n    try {\n      fetched.fetchData({\n        postForm: {\n          type: 'CREATE',\n          name: value || getRandomRoomName(),\n          user,\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    };\n  }, [fetched, value, user]);\n\n  useEffect(() => {\n    fetched.responseData && \n    history.push('/room/' + (fetched.responseData as any)._id);\n  }, [fetched.responseData]);\n\n  return ({\n    value,\n    handleChangeInput,\n    handleCreateRoom,\n  });\n};\n\nexport default useCreateRoomPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/reducers/index.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/components/WaitingRoom/PlayerItem.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/actions/index.ts",["390"],"import { GamePlayingStatus, SingleUser } from \"common-types\";\nimport { GamePlayingStatusState } from \"constants/context\";\n\nexport enum ActionTypes {\n  SET_GAME_PLAYING_STATUS,\n  UPDATE_GAME_PLAYING_STATUS,\n  RESET_GAME_PLAYING_STATUS,\n\n  SET_USER,\n  RESET_USER,\n}\n\nexport interface SetGamePlayingStatusPayload extends GamePlayingStatusState {\n  \n}\nexport interface UpdateGamePlayingStatusPayload {\n  key: string // 例如 \"status.myCardNow\"\n  value: any\n}\nexport interface SetGamePlayingStatus {\n  type: ActionTypes.SET_GAME_PLAYING_STATUS\n  payload: SetGamePlayingStatusPayload\n}\nexport interface UpdateGamePlayingStatus {\n  type: ActionTypes.UPDATE_GAME_PLAYING_STATUS\n  payload: UpdateGamePlayingStatusPayload\n}\nexport interface ResetGamePlayingStatus {\n  type: ActionTypes.RESET_GAME_PLAYING_STATUS\n}\n\nexport const setGamePlayingStatus = (payload: SetGamePlayingStatusPayload) => ({\n  type: ActionTypes.SET_GAME_PLAYING_STATUS,\n  payload,\n});\nexport const updateGamePlayingStatus = (payload: UpdateGamePlayingStatusPayload) => ({\n  type: ActionTypes.UPDATE_GAME_PLAYING_STATUS,\n  payload,\n});\nexport const resetGamePlayingStatus = () => ({\n  type: ActionTypes.RESET_GAME_PLAYING_STATUS,\n});\n\n\nexport interface SetUserPayload extends SingleUser {\n  \n}\nexport interface SetUser {\n  type: ActionTypes.SET_USER\n  payload: SetUserPayload\n}\n\nexport const setUser = (payload: SetUserPayload) => ({\n  type: ActionTypes.SET_USER,\n  payload,\n});\n\n\nexport type ItoActions = \n  SetGamePlayingStatus |\n  UpdateGamePlayingStatus |\n  SetUser\n\n","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/GamePart/components/Playing/PassedRoundsInfo.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/RoomPart/containers/WaitingRoom/functions/roomResolvers.ts",[],["391","392"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/functions/checkIsRoomsPage.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/SettingButton.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/ButtonInHeader.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/HintButton.tsx",["393"],"import React from 'react';\nimport { Box } from '@material-ui/core';\nimport ButtonInHeader from './ButtonInHeader';\nimport { HelpOutline } from '@material-ui/icons';\nimport { Callback } from 'common-types';\n\nexport interface HintButtonProps {\n  onToggleHint: Callback\n}\n\nconst HintButton = (props: HintButtonProps) => {\n  return (\n    <ButtonInHeader onClick={props.onToggleHint}>\n      <HelpOutline />\n    </ButtonInHeader>\n  );\n};\n\nexport default HintButton;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/containers/functions/useHeader.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/static/gameManual.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/wrappers/ModalWrapper.tsx",["394"],"import React, { ReactNode } from 'react';\nimport { Box, Button, makeStyles, Modal, ModalProps, Paper } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\n\nexport interface ModalWrapperProps extends Omit<ModalProps, 'children'> {\n  children: ReactNode\n}\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  content: {\n    position: 'relative',\n    backgroundColor: '#fff',\n    padding: theme.spacing(1),\n    borderRadius: theme.spacing(1),\n    width: 600,\n    maxWidth: '100%',\n    maxHeight: '90vh',\n    overflow: 'scroll',\n  }\n}));\n\nconst ModalWrapper = (props: ModalWrapperProps) => {\n  const classes = useStyles();\n\n  return (\n    <Modal\n      className={classes.modal}\n      {...props}\n    >\n      <Paper className={classes.content}>\n        <Button\n          onClick={props.onClose as any}\n          style={{\n            position: 'absolute', top: 0, right: 0, zIndex: 10,\n          }}\n        >\n          <Close />\n        </Button>\n        {props.children}\n      </Paper>\n    </Modal>\n  );\n};\n\nexport default ModalWrapper;","/Users/PenguinCho/Desktop/ito-online/frontend/src/reportWebVitals.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryRooms.ts",["395"],"import { SingleRoom } from \"common-types\";\nimport { useEffect } from \"react\";\nimport { API_URI } from \"../../constants/API\";\nimport useFetch from \"../../lib/custom-hooks/useFetch\";\n\n\nconst URI = API_URI + '/rooms';\n\nconst useQueryRooms = () => {\n  const fetched = useFetch<SingleRoom[]>({\n    apiPath: URI,\n    initResponseData: [],\n    requestInit: {\n      // mode: 'no-cors',\n    }\n  });\n\n  useEffect(() => {\n    fetched.fetchData();\n  }, []);\n\n  return fetched;\n};\n\nexport default useQueryRooms;",["396","397"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useCheckIsRoomPage.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/CreateQuestionPartContainer.tsx",["398"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/components/CreateQuestionPart.tsx",["399"],"import React from 'react';\nimport { Box, Button, Divider, Grid, makeStyles, TextareaAutosize, TextField, Typography } from '@material-ui/core';\nimport { CreateQuestionPartProps } from './types';\nimport CTAButton from 'components/ito/Common/components/CTAButton';\nimport IntlFormattedMessage from 'components/ito/Common/components/intl/IntlFormattedMessage';\nimport { useIntl } from 'react-intl';\nimport ToggleDisplayWrapper from 'components/ito/Common/components/wrappers/ToggleDisplayWrapper';\nimport QuestionListContainer from 'components/ito/SettingPart/containers/QuestionListContainer';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'space-around',\n    whiteSpace: 'pre-wrap',\n    // textAlign: 'center',\n  },\n  questionsWrapper: {\n    maxHeight: 360,\n    overflow: 'auto',\n  },\n  textArea: {\n    padding: theme.spacing(1),\n    width: `calc(100% - ${theme.spacing(2)}px)`,\n    maxWidth: '100%',\n    borderRadius: theme.spacing(1),\n    fontSize: 24,\n    resize: 'none',\n  },\n  input: {\n    padding: theme.spacing(1),\n  }\n}));\n\nconst CreateQuestionPart = ({\n  toggleDisplayQuestions,\n  loading,\n  createDisabled,\n  values,\n  onToggleDisplayQuestions,\n  onValuesChange,\n  onCreateQuestion,\n}: CreateQuestionPartProps) => {\n  const classes = useStyles();\n  const { messages } = useIntl();\n\n  return (\n    <Box className={classes.root}>\n      <Button variant={'outlined'} onClick={onToggleDisplayQuestions}>\n        <IntlFormattedMessage\n          langKey={toggleDisplayQuestions ? \n            'createQuestionPart.toggleAllQuestions.hide' : \n            'createQuestionPart.toggleAllQuestions.display'\n          }\n        />\n      </Button>\n      <ToggleDisplayWrapper className={classes.questionsWrapper} isDisplay={toggleDisplayQuestions}>\n        <QuestionListContainer />\n      </ToggleDisplayWrapper>\n      <Box paddingBottom={2}>\n        <Box paddingBottom={2}>\n          <IntlFormattedMessage \n            align={'center'} \n            variant={'h5'}\n            langKey={'createQuestionPart.title'}\n          />\n          <IntlFormattedMessage \n            langKey={'createQuestionPart.desc'}\n          />\n        </Box>\n        <Box paddingY={1}>\n          <TextareaAutosize\n            className={classes.textArea}\n            placeholder={messages['createQuestionPart.questionInput.placeholder'] as any}\n            autoFocus={true}\n            rowsMin={4}\n            value={values['QUESTION']}\n            onChange={onValuesChange('QUESTION')}\n          />\n        </Box>\n        <Grid container alignItems={'center'}>\n          <Grid item xs={4}>\n            <IntlFormattedMessage \n              variant={'h6'}\n              langKey={'createQuestionPart.supplementInput.prefix'}\n            />\n          </Grid>\n          <Grid item xs={8}>\n            <TextField\n              placeholder={messages['createQuestionPart.supplementInput.placeholder'] as any}\n              variant={'outlined'}\n              fullWidth={true}\n              value={values['SUPPLEMENT']}\n              onChange={onValuesChange('SUPPLEMENT')}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <CTAButton \n        disabled={loading || createDisabled} \n        onClick={onCreateQuestion}\n      >\n        {loading ? (\n          <IntlFormattedMessage \n            langKey={'createQuestionPart.creating'}\n          />\n        ) : (\n          <IntlFormattedMessage \n            langKey={'createQuestionPart.confirmCreate'}\n          />\n        )}\n      </CTAButton>\n    </Box>\n  );\n};\n\nexport default CreateQuestionPart;","/Users/PenguinCho/Desktop/ito-online/frontend/src/lib/custom-hooks/useInputValues.ts",["400","401","402"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Forms/containers/functions/useCreateQuestionPart.ts",["403","404"],"/Users/PenguinCho/Desktop/ito-online/frontend/src/locale/locale.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/intl/IntlFormattedMessage.tsx",["405"],"import React from 'react';\nimport { Box, Typography, TypographyProps, makeStyles, Theme } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { localeKeys, LocaleKeys, langs } from 'locale/locale';\n\n\nexport interface IntlFormattedMessageProps<Values> extends TypographyProps {\n  values?: Values\n  langKey: LocaleKeys\n}\n\nconst useStyles = makeStyles<Theme, IntlFormattedMessageProps<any>>(theme => ({\n  root: {\n    color: props => props.color === 'primary' ? theme.palette.primary.dark : props.color,\n    whiteSpace: 'pre-wrap',\n  }\n}));\n\nfunction IntlFormattedMessage<Values extends Record<string, any>>(props: IntlFormattedMessageProps<Values>) {\n  const {\n    values,\n    langKey,\n    variant,\n  } = props;\n  const classes = useStyles(props);\n  \n  return (\n    <>\n      <FormattedMessage<Values> \n        id={localeKeys[langKey]}\n        defaultMessage={langs.zh[langKey]}\n        values={values}>\n        {txt => (\n          <Typography\n            className={classes.root}\n            {...props}\n            variant={variant}\n          >\n            {txt}\n          </Typography>\n        )}\n      </FormattedMessage>\n    </>\n  );\n}\n\nexport default IntlFormattedMessage;","/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/SettingPart/component/GameManual.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/SettingPart/containers/functions/useQuestionList.ts",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/wrappers/ToggleDisplayWrapper.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/SettingPart/component/QuestionList.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/components/ito/Common/components/others/LoadingAndError.tsx",[],"/Users/PenguinCho/Desktop/ito-online/frontend/src/api/custom-hooks/useQueryQuestions.ts",["406","407"],{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","severity":1,"message":"413","line":2,"column":15,"nodeType":"414","messageId":"415","endLine":2,"endColumn":21},{"ruleId":"412","severity":1,"message":"416","line":2,"column":41,"nodeType":"414","messageId":"415","endLine":2,"endColumn":48},{"ruleId":"408","replacedBy":"417"},{"ruleId":"410","replacedBy":"418"},{"ruleId":"412","severity":1,"message":"413","line":2,"column":15,"nodeType":"414","messageId":"415","endLine":2,"endColumn":21},{"ruleId":"408","replacedBy":"419"},{"ruleId":"410","replacedBy":"420"},{"ruleId":"412","severity":1,"message":"421","line":2,"column":24,"nodeType":"414","messageId":"415","endLine":2,"endColumn":28},{"ruleId":"408","replacedBy":"422"},{"ruleId":"410","replacedBy":"423"},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"425","line":2,"column":27,"nodeType":"414","messageId":"415","endLine":2,"endColumn":32},{"ruleId":"412","severity":1,"message":"426","line":2,"column":34,"nodeType":"414","messageId":"415","endLine":2,"endColumn":39},{"ruleId":"412","severity":1,"message":"427","line":2,"column":41,"nodeType":"414","messageId":"415","endLine":2,"endColumn":51},{"ruleId":"412","severity":1,"message":"428","line":3,"column":10,"nodeType":"414","messageId":"415","endLine":3,"endColumn":29},{"ruleId":"412","severity":1,"message":"429","line":62,"column":9,"nodeType":"414","messageId":"415","endLine":62,"endColumn":16},{"ruleId":"408","replacedBy":"430"},{"ruleId":"410","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":39,"column":6,"nodeType":"434","endLine":39,"endColumn":8,"suggestions":"435"},{"ruleId":"412","severity":1,"message":"436","line":4,"column":10,"nodeType":"414","messageId":"415","endLine":4,"endColumn":23},{"ruleId":"437","severity":1,"message":"438","line":40,"column":5,"nodeType":"439","messageId":"440","endLine":40,"endColumn":23},{"ruleId":"408","replacedBy":"441"},{"ruleId":"410","replacedBy":"442"},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"443","line":1,"column":32,"nodeType":"414","messageId":"415","endLine":1,"endColumn":59},{"ruleId":"412","severity":1,"message":"444","line":7,"column":24,"nodeType":"414","messageId":"415","endLine":7,"endColumn":36},{"ruleId":"412","severity":1,"message":"445","line":27,"column":7,"nodeType":"414","messageId":"415","endLine":27,"endColumn":24},{"ruleId":"432","severity":1,"message":"446","line":49,"column":6,"nodeType":"434","endLine":49,"endColumn":8,"suggestions":"447"},{"ruleId":"412","severity":1,"message":"448","line":2,"column":39,"nodeType":"414","messageId":"415","endLine":2,"endColumn":49},{"ruleId":"412","severity":1,"message":"449","line":3,"column":10,"nodeType":"414","messageId":"415","endLine":3,"endColumn":21},{"ruleId":"412","severity":1,"message":"450","line":6,"column":10,"nodeType":"414","messageId":"415","endLine":6,"endColumn":18},{"ruleId":"432","severity":1,"message":"451","line":30,"column":6,"nodeType":"434","endLine":30,"endColumn":36,"suggestions":"452"},{"ruleId":"432","severity":1,"message":"453","line":30,"column":15,"nodeType":"454","endLine":30,"endColumn":35},{"ruleId":"412","severity":1,"message":"443","line":1,"column":32,"nodeType":"414","messageId":"415","endLine":1,"endColumn":59},{"ruleId":"412","severity":1,"message":"449","line":5,"column":27,"nodeType":"414","messageId":"415","endLine":5,"endColumn":38},{"ruleId":"412","severity":1,"message":"455","line":11,"column":10,"nodeType":"414","messageId":"415","endLine":11,"endColumn":14},{"ruleId":"432","severity":1,"message":"456","line":125,"column":6,"nodeType":"434","endLine":125,"endColumn":16,"suggestions":"457"},{"ruleId":"432","severity":1,"message":"458","line":137,"column":6,"nodeType":"434","endLine":137,"endColumn":15,"suggestions":"459"},{"ruleId":"432","severity":1,"message":"460","line":142,"column":6,"nodeType":"434","endLine":142,"endColumn":8,"suggestions":"461"},{"ruleId":"412","severity":1,"message":"413","line":2,"column":15,"nodeType":"414","messageId":"415","endLine":2,"endColumn":21},{"ruleId":"412","severity":1,"message":"462","line":7,"column":10,"nodeType":"414","messageId":"415","endLine":7,"endColumn":21},{"ruleId":"412","severity":1,"message":"463","line":12,"column":5,"nodeType":"414","messageId":"415","endLine":12,"endColumn":19},{"ruleId":"412","severity":1,"message":"464","line":13,"column":5,"nodeType":"414","messageId":"415","endLine":13,"endColumn":15},{"ruleId":"412","severity":1,"message":"465","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":25},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"427","line":2,"column":21,"nodeType":"414","messageId":"415","endLine":2,"endColumn":31},{"ruleId":"432","severity":1,"message":"466","line":16,"column":6,"nodeType":"434","endLine":16,"endColumn":8,"suggestions":"467"},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"468","line":1,"column":17,"nodeType":"414","messageId":"415","endLine":1,"endColumn":27},{"ruleId":"412","severity":1,"message":"469","line":3,"column":8,"nodeType":"414","messageId":"415","endLine":3,"endColumn":20},{"ruleId":"412","severity":1,"message":"470","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":24},{"ruleId":"412","severity":1,"message":"471","line":4,"column":8,"nodeType":"414","messageId":"415","endLine":4,"endColumn":16},{"ruleId":"412","severity":1,"message":"472","line":5,"column":23,"nodeType":"414","messageId":"415","endLine":5,"endColumn":32},{"ruleId":"412","severity":1,"message":"473","line":7,"column":37,"nodeType":"414","messageId":"415","endLine":7,"endColumn":50},{"ruleId":"432","severity":1,"message":"460","line":21,"column":6,"nodeType":"434","endLine":21,"endColumn":8,"suggestions":"474"},{"ruleId":"412","severity":1,"message":"475","line":24,"column":11,"nodeType":"414","messageId":"415","endLine":24,"endColumn":14},{"ruleId":"432","severity":1,"message":"460","line":26,"column":6,"nodeType":"434","endLine":26,"endColumn":8,"suggestions":"476"},{"ruleId":"477","severity":1,"message":"478","line":2,"column":43,"nodeType":"479","messageId":"480","endLine":2,"endColumn":44,"suggestions":"481"},{"ruleId":"432","severity":1,"message":"482","line":49,"column":6,"nodeType":"434","endLine":49,"endColumn":28,"suggestions":"483"},{"ruleId":"412","severity":1,"message":"484","line":1,"column":10,"nodeType":"414","messageId":"415","endLine":1,"endColumn":27},{"ruleId":"408","replacedBy":"485"},{"ruleId":"410","replacedBy":"486"},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"432","severity":1,"message":"466","line":20,"column":6,"nodeType":"434","endLine":20,"endColumn":8,"suggestions":"487"},{"ruleId":"408","replacedBy":"488"},{"ruleId":"410","replacedBy":"489"},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"427","line":2,"column":79,"nodeType":"414","messageId":"415","endLine":2,"endColumn":89},{"ruleId":"432","severity":1,"message":"490","line":23,"column":6,"nodeType":"434","endLine":23,"endColumn":8,"suggestions":"491"},{"ruleId":"432","severity":1,"message":"492","line":34,"column":6,"nodeType":"434","endLine":34,"endColumn":30,"suggestions":"493"},{"ruleId":"432","severity":1,"message":"453","line":34,"column":7,"nodeType":"454","endLine":34,"endColumn":29},{"ruleId":"432","severity":1,"message":"494","line":49,"column":6,"nodeType":"434","endLine":49,"endColumn":42,"suggestions":"495"},{"ruleId":"432","severity":1,"message":"496","line":56,"column":6,"nodeType":"434","endLine":56,"endColumn":28,"suggestions":"497"},{"ruleId":"412","severity":1,"message":"424","line":2,"column":10,"nodeType":"414","messageId":"415","endLine":2,"endColumn":13},{"ruleId":"412","severity":1,"message":"498","line":1,"column":10,"nodeType":"414","messageId":"415","endLine":1,"endColumn":20},{"ruleId":"432","severity":1,"message":"466","line":14,"column":6,"nodeType":"434","endLine":14,"endColumn":8,"suggestions":"499"},"no-native-reassign",["500"],"no-negated-in-lhs",["501"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.",["500"],["501"],["500"],["501"],"'Grid' is defined but never used.",["500"],["501"],"'Box' is defined but never used.","'Modal' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'PlayedResultPayload' is defined but never used.","'classes' is assigned a value but never used.",["500"],["501"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'history' and 'onBack'. Either include them or remove the dependency array. If 'onBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["502"],"'AccountCircle' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode",["500"],["501"],"'SetGamePlayingStatusPayload' is defined but never used.","'initItoState' is defined but never used.","'gamePlayingStatus' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'handleToggle'. Either include it or remove the dependency array.",["503"],"'GameStatus' is defined but never used.","'GAME_STATUS' is defined but never used.","'ItoState' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["504"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'send' is defined but never used.","React Hook useCallback has a missing dependency: 'handleSetResultOpen'. Either include it or remove the dependency array.",["505"],"React Hook useCallback has a missing dependency: 'setConfirmed'. Either include it or remove the dependency array.",["506"],"React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.",["507"],"'getOperator' is defined but never used.","'prevCardNumber' is assigned a value but never used.","'resultType' is assigned a value but never used.","'combineReducers' is defined but never used.","React Hook useEffect has a missing dependency: 'fetched'. Either include it or remove the dependency array.",["508"],"'useContext' is defined but never used.","'ContextStore' is defined but never used.","'QUERY_ROOM_URI' is defined but never used.","'useFetch' is defined but never used.","'useEffect' is defined but never used.","'RoomPartProps' is defined but never used.",["509"],"'URI' is assigned a value but never used.",["510"],"no-useless-escape","Unnecessary escape character: \\:.","Literal","unnecessaryEscape",["511","512"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["513"],"'GamePlayingStatus' is defined but never used.",["500"],["501"],["514"],["500"],["501"],"React Hook useCallback has a missing dependency: 'initValues'. Either include it or remove the dependency array. If 'setVals' needs the current value of 'initValues', you can also switch to useReducer instead of useState and read 'initValues' in the reducer.",["515"],"React Hook useEffect has missing dependencies: 'onValueChanged' and 'values'. Either include them or remove the dependency array. If 'onValueChanged' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["516"],"React Hook useCallback has missing dependencies: 'fetched' and 'messages'. Either include them or remove the dependency array.",["517"],"React Hook useEffect has missing dependencies: 'handleClearAllValues' and 'messages'. Either include them or remove the dependency array.",["518"],"'SingleRoom' is defined but never used.",["519"],"no-global-assign","no-unsafe-negation",{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"530","fix":"534"},{"desc":"530","fix":"535"},{"messageId":"536","fix":"537","desc":"538"},{"messageId":"539","fix":"540","desc":"541"},{"desc":"542","fix":"543"},{"desc":"532","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"532","fix":"553"},"Update the dependencies array to be: [history, onBack]",{"range":"554","text":"555"},"Update the dependencies array to be: [handleToggle]",{"range":"556","text":"557"},"Update the dependencies array to be: [roomId, user]",{"range":"558","text":"559"},"Update the dependencies array to be: [dispatch, handleSetResultOpen]",{"range":"560","text":"561"},"Update the dependencies array to be: [setConfirmed, user.id]",{"range":"562","text":"563"},"Update the dependencies array to be: [history]",{"range":"564","text":"565"},"Update the dependencies array to be: [fetched]",{"range":"566","text":"567"},{"range":"568","text":"565"},{"range":"569","text":"565"},"removeEscape",{"range":"570","text":"571"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"572","text":"573"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [fetched.responseData, history]",{"range":"574","text":"575"},{"range":"576","text":"567"},"Update the dependencies array to be: [initValues]",{"range":"577","text":"578"},"Update the dependencies array to be: [onValueChanged, values]",{"range":"579","text":"580"},"Update the dependencies array to be: [fetched, messages, values.QUESTION, values.SUPPLEMENT]",{"range":"581","text":"582"},"Update the dependencies array to be: [fetched.responseData, handleClearAllValues, messages]",{"range":"583","text":"584"},{"range":"585","text":"567"},[887,889],"[history, onBack]",[1748,1750],"[handleToggle]",[625,655],"[roomId, user]",[3637,3647],"[dispatch, handleSetResultOpen]",[4064,4073],"[setConfirmed, user.id]",[4193,4195],"[history]",[460,462],"[fetched]",[678,680],[810,812],[43,44],"",[43,43],"\\",[1214,1236],"[fetched.responseData, history]",[441,443],[655,657],"[initValues]",[883,907],"[onValueChanged, values]",[1307,1343],"[fetched, messages, values.QUESTION, values.SUPPLEMENT]",[1506,1528],"[fetched.responseData, handleClearAllValues, messages]",[406,408]]